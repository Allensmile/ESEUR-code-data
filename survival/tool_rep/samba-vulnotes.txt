SNAPSHOT	DOCUMENTED	COMMIT NOTES
17	NO	 =- fix a bug hanlding very log filenames - move quotas support to separate file - send keepalives to password server
21	NO	cleaned up the way the max log size stuff works and fixed a potential problem with varargs usage in Debug() 
28	NO	"Lots of changes!  - add faq info on NT printer handling - add ""delete readonly"" option to help rcs users - add stuff to man pages on new printer options - add ""proxy name resolution"" option - add ""command string"" -c option to smbclient (thanks Ken) - split time functions into time.c - rearrange the quotas stuff a bit and fix some bugs - complete rehash of the time handling code thanks to Paul Eggert - fix nmblookup output a bit - add plp print queue parsing from Bertrand Wallrich "
30	YES	 =- moved the uid handling to uid.c - added setfsuid() support (for Linux) - started adding some of Lukes changes  just the loadparm and ipc ones so far
31	NO	a huge pile of changes :-)  The biggest thing is the integration of Lukes new nmbd. Its still largely untested  so we will really need some feedback  I've also added auto prototype generation and cleaned up a lot of minor things as a result 
40	YES	 =- added interface.c and removed all the references to myip  bcast_ip and Netmask  instead replacing them with calls to routines in interface.c  - got rid of old MAXINT define  - added code to ensure we only return one entry for each name in the ipc enum routines  - added new_only option to add_netbios_entry() to prevent overwriting of important names  - minor time handling fixup
42	NO	- added predict.c  moving the routines from util.c  - added iface_count() and iface_n_ip() routines so its easy to loop over the local interface list  - made readsize a normal loadparm global  - check for null w in add_domain_entry()  - set the deathtime 
43	NO	 =- added comments to byteorder.h explaining how it works. - fixed problem with installscripts if srcdir is not set - fixed ptr init bug in interface.c - changed default lookup type in nmblookup to match nbtstat under NT - new quotas fixes for sunos and solaris
50	NO	moved some more locking routines to locking.c  and moved replacement routines for broken OSes from util.c to replace.c. 
56	NO	 =- change date as a demo for john - modified plp printing parser to work on my system
57	NO	Basic doc changes to keep up to date.  Dan 
58	NO	luke's first attempt at using cvs  accidentally updated the Makefile  updated the name database structure (again!). this time  there is one name database per local interface. there is also a pseudo-interface on ip 255.255.255.255. its purpose is to store WINS name entries. all the local interface name databases store SELF names only. the WINS name database stores non-special browser names.  added wins.dat file: records WINS entries in ascii format. this is reloaded when nmbd restarts.  added repeating code for response packets. timer is in seconds only at the moment.  updated the response queue code to deal with samba registering with a WINS server a bit better (added more cases when a response isn't received). tidied up the response packet processing code and expire_response_queue() code. added cross references between response received and await-response expired code.  added over-zealous code that checks all machines that register with samba as a WINS server (every 10 minutes i think): to see whether they are still alive or not (see rfc1001.txt)  bug reported by terry@ren.pc.athabascau.ca: DNSFAILed names _stay_ as DNSFAIL  even though the machine may come back up and REGISTER.  removed update_from_reg() function. it's not necessary  and it does too much.  added code that announces on each local interface samba's ttl as zero and servertype as zero when nmbd is kill -TERMed  first attempt at putting the first functionality of samba browsing back in (remote subnets should have samba appear in a workgroup specified through the lmhosts file)  lots of other miscellaneous tidying up / chopping about. 
62	NO	as a result of the writing of namework.doc  namework.c has been tidied up  some bugs fixed / documented and some discrepancies noted down (in namework.c as well as namework.doc)  namebrowse.c and namelogon.c contain functions that were inappropriately placed in namework.c. namebrowse.c contains browse sync queue management functions that were inappropriately placed in namedb.c  the 'cmd_type' member of response_record has been renamed to 'state' because that more accurately reflects it purpose (not entirely. sigh).  fixed a bug in nameserv.c that meant the previous version wouldn't compile.  there's probably a bit more...  lkcl 
71	NO	"tidied up: code shuffling and documentation. created namedb*.c nameservresp.c nameservreply.c and namepacket.c added modules to Makefile  downloading dan's current version first :-) shuffled docs to match source created more docs  fixed bug in announce_backup() discovered when going nameannounce.doc: backup list requests to the master browser should be used when samba is not a master browser; backup list requests to the primary domain controller should be used when samba is not a primary domain controller.  fixed bug in sync_server: it would never send MasterAnnounce packets.  removed the code that ignored special browser names: these should only be ignored (except 0x1b names) when broadcasted name queries are sent  not when directed registration or directed queries are sent samba as a WINS server. (note: exactly what's going on is still uncertain).  renamed NAME_QUERY_MST_SRV_CHK  to NAME_QUERY_PDC_SRV_CHK  (more accurate). renamed NAME_STATUS_MST_SRV_CHK to NAME_STATUS_PDC_SRV_CHK (more accurate).  added secured WINS name registration: a new 'state' NAME_REGISTER_CHALLENGE; functions send_name_response()  response_name_query_register(); added sending of WAIT ACKNOWLEDGEMENT packet; added a reply_to_ip field to the response record structure so that after the name query challenge  you know who to inform of the outcome of that challenge.  note: these are all currently untested modifications (yikes!)  lkcl "
73	YES	sorted out various timer delay bugs: nameannounce.c nameserv.c  namedbname.c:search_for_name() wasn't looking for 0x1b as well as 0x0 and 0x20 name types.  reduced number of retransmissions of packets from 4 to 3 times.  added code that ensures remote lmhosts entries don't get deleted when a master browser cannot be found on a remote subnet. stopped forcing an election on remote subnets if a master browser cannot be found.  stopped browse list and wins list from being written out too frequently.  only add samba's names to local interfaces.  add 0x1c name if we are a domain logon machine (needs more exploration).  why bother reloading services when receiving a SIGTERM?  sort out add_my_name_entry() and remove_name_entry() to deal with broadcast  samba as a WINS and samba using a WINS. properly.  added extra debug information to help with expected response queue code. updated debug comments in become_master().  altered dump_names() DEBUG format. it looks prettier. altered wins.dat format to match DEBUG format.  lkcl 
75	NO	updated docs to match code mods from last two or three updates. done some more commenting of code to match docs.  sorted some bugs.  ipc BOOL domains was uninitialised.  lkcl 
82	NO	"fix up problems with ""smbclient -L"". It now uses a generic NetServerEnum with no workgroup attached if the workgroup is ""WORKGROUP"" (the default in the Makefile) and uses the specific NetServerEnum (with workgroup attached) otherwise. "
87	YES	fix a bug that we've had for a long time where we don't handle EOF properly from clients  and end up looping like mad.  At least I _hope_ this is fixed. 
108	NO	"- added the ""remote announce"" option - made the lp_string() code able to handle any length string - got rid of the obsolete lmhosts code  instead users should use ""interfaces"" and ""remote announce"". lmhosts now is just used as a IP to netbios name map - c"
110	NO	- added support for Amiga-unix (based on BSD I think)  - changed the order of PROGS and SPROGS in Makefile (SPROGS first)  - another 64 bit cleanup (for INADDR_NONE)  - added paranoia code in DirCacheAdd() to detect looping  - fixed important DirCache flu
114	NO	"- made FAST_SHARE_MODES standard for Linux  - you can now press enter after a password prompt with ""smbclient -L hostname"" and it will use a blank username and password  the same as if you used -U%  - changed the wins.dat store code to not go via a string"
117	NO	i wondered why there was a cvs clash on namedbname.c  - redid tridge's fprintf for storing wins.dat  and yet again removed the unsigned long changing it to a unint32.  lkcl 
122	YES	"- fix a bug in NetServerEnum where counted and total were not counted correctly if there were multiple instances of a name. This led to the infamous ""not enough memory"" error when browsing (but this isn't the only cause of that message)  - fix a triple-ch"
141	NO	 =- fixed bugs in nmb response packet checking.  - added multiple workgroup code - samba can register under different   (unique) NetBIOS aliases  one per workgroup it joins.  lkcl
143	NO	removed all of lukes recent changes. I need to do a p2 release but can't test the multi group changes.  I also found that some of lukes changes wiped out some recent bug fixes. Is your CVS tree ok luke? 
153	NO	- a huge pile of changes from Luke which implement the browse.conf stuff and also fix a pile of nmbd bugs. Unfortunately I found it very hard to disentangle the new features from the bug fixes so I am putting in the new code. I hope this is the last big p
154	NO	backout all the changes to nmbd.  The 1.9.16 tree is now back to 1.9.16p2 as far as nmbd is concerned apart from a small change that fixes the announce type in two places. 
156	YES	- changed the umask handling. We now set the umask to 0 and explicitly set the mode on all created files. I think this is a better policy.  - change the debug levels on some items  - fix a charset handling bug which affected foreign and extended charset u
158	YES	"I have fixed quite a few important bugs in this commit.  Luke  can you take special note of the bug fixes to nmbd so you can propogate them to your new code.  - rewrote the code that used to use fromhost(). We now call gethostbyaddr() only if necessary and a maximum of once per connection. Calling gethostbyaddr() causes problems on some systems so avoiding it if possible is a good thing :-)  - added the ""fake oplocks"" option. See the docs in smb.conf(5) and Speed.txt  - fixed a serious bug in nmbd where it would try a DNS lookup on FIND_SELF queries. This caused a lot of unnecessary (and incorrect) DNS lookups to happen. FIND_SELF queries should only go to the internal name tables.  - don't set FIND_SELF for name queries if we are a wins proxy  as we are supposed to be answering queries for other hosts.  - fixed a bug in nmbd which had ""if (search | FIND_LOCAL)"" instead of ""if (search & FIND_LOCAL)"". Luke  this was in nameservreply.c  - the above 3 bugs together meant that DNS queries were being cached  but the cache wasn't being used  so every query was going to DNS  no wonder nmbd has been chewing so much CPU time! Another side effect was that queries on names in lmhosts weren't being answered for bcast queries with ""wins proxy"" set.  - ignore the maxxmit for seconday session setups (see CIFS spec)  - close user opened files in a uLogoffX for user level security (see CIFS spec)  - added uid into the files struct to support the above change "
199	NO	removed getdomainname() stuff and appending a '.' to the name in dns_name_search().  lkcl 
219	NO	Makefile: Changes to split Solaris into Solaris2.3 and previous  and 2.4 and after from Paul Eggert. Makefile: Added AMIGA changes from Rask Ingemann Lambertsen <rask@k4315.kampsax.dtu.dk>. charset.c: Patch for Western European Languages from Josef Hinteregger <joehtg@joehtg.co.at> charset.h: Patch for Western European Languages from Josef Hinteregger <joehtg@joehtg.co.at> clitar.c: Patch to re-sync after read fail from (lost contributor name  sorry). includes.h: Patch for AMIGA from Rask Ingemann Lambertsen <rask@k4315.kampsax.dtu.dk> includes.h: Patch for SunOS atexit by Jeremy (jra@cygnus.com) interface.c: Patch for AMIGA from Rask Ingemann Lambertsen <rask@k4315.kampsax.dtu.dk> kanji.h: Patch for Western European Languages from Josef Hinteregger <joehtg@joehtg.co.at> locking.c: Patch to fix file locking from Jeremy (jra@cygnus.com) locking.c: Patch to add granularity of lock files to usec by Jeremy (jra@cygnus.com) pipes.c: Patch to fix file locking from Jeremy (jra@cygnus.com) proto.h: Patch to fix file locking from Jeremy (jra@cygnus.com) reply.c: Patch to fix file locking from Jeremy (jra@cygnus.com) server.c: Patch to fix file locking from Jeremy (jra@cygnus.com) server.c: Patch for FAST_SHARE_MODE fix from (lost contributor name  sorry). smb.h: Patch to fix file locking from Jeremy (jra@cygnus.com) smb.h: Patch to add granularity of lock files to usec by Jeremy (jra@cygnus.com) status.c: Patch to fix file locking from Jeremy (jra@cygnus.com) statuc.c: Patch to add granularity of lock files to usec by Jeremy (jra@cygnus.com) system.c: Patch for Western European Languages from Josef Hinteregger <joehtg@joehtg.co.at> trans2.c: Patch to fix file locking from Jeremy (jra@cygnus.com) trans2.c: Patch to fix volume name reported to Win95 from Jeremy (jra@cygnus.com) util.c: Patch for Western European Languages from Josef Hinteregger <joehtg@joehtg.co.at> util.c: Patch to fix client_name from continuously returning UNKNOWN (from various contributors). version.h: Update to 1.9.16p10. 
221	YES	locking.c proto.h shmem.c smb.h status.c : Changed shm_ prefixes to smb_shm_ prefixes as shm_ is a POSIX.4 prefix. Updated fd code in FAST_SHARE_MODE code to work with new fd indirection. quotas.c: Fixed #ifdef not on position zero. Jeremy. (jra@cygnus.com). 
235	YES	Removed YOST code. Removal of leading ./ chars should be done in unix_clean_name in util.c jra@cygnus.com 
237	YES	Replaced YOST code with more functionally equivalent code that changes a bit less. Also added fix to tricky reply_mv case. jra@cygnus.com 
240	NO	Fixed problem with renaming folder on top level share. jra@cygnus.com 
242	YES	"Makefile: Added cleandir target. chgpasswd.c: Added patch from Roland Haag <haag@think.de> to allow              password changes to be done more than once. loadparm.c: Added entries for the ""directory mode/directory mask parameters"".             Changed default file mode to 644. proto.h: Added sys_gethostbyname. server.c: Added directory mode changes. system.c: Added sys_gethostbyname. trans2.c: Added NT_FILE_ATTRIBUTE_NORMAL patch from Roger Orr           <rorr@csfp.csfb.com> trans2.h: Defined NT_FILE_ATTRIBUTE_NORMAL for above patch. util.c: Changes calls to gethostbyname to sys_gethostbyname. jra@cygnus.com "
250	NO	"1) updated ipc.c NetUserGetInfo - load \\%L\%U instead of \\%L\HOMES    because the share must be browseable by a w95 client  2) send_mailslot_reply - unique or group datagram argument added.  3) netlogon.c - rewrote response packet to do the right thing for w95.  4) server.c reply_nt1() - added OEMDomainstring to the end.  5) (deep breath) reworked the nmbd-browsing code a little bit.    i discovered two months ago that becoming a primary domain controller    (and domain master browser) is done independently of becoming a    backup domain controller (logon server) is done independently of    becoming a local master browser.     therefore  three sets of state-machines (instead of just one) are in    place - each of which is responsible for taking samba through the    required stages to become:  a logon server; a domain master browser;    and a local master browser.     each of these three things can occur independently on each interface     _including_ the wins pseudo-interface.  the only slight caveat is that    the wins pseudo-interface  by virtue of _not_ being a broadcast    interface  does _not_ register as a local master browser with the wins    server  as this doesn't make sense.  lkcl "
267	YES	added automount home directory support.  contributed by simeon@bangor.co.uk and a mini bug-fix by rob.nacarrato@sheridanc.on.ca  reads in an entry from the auto.home file for the user when they log in  and mounts their home directory as the default path for the [homes] service.  i might add this as to the %substitution system  so that you can specify subdirectories for the user profiles  mainly.  lkcl 
268	NO	'The mother of all checkins' :-). Jeremy Allison (jallison@whistle.com) Wed May  7 1997: Update for 1.9.17alpha1 release - 'browsefix release' designed to make browsing across subnets work.  byteorder.h:
272	NO	dir.c:
287	NO	Makefile:
297	YES	Fixed compile warnings for FreeBsd & Linux. Jeremy (jallison@whistle.com). 
301	NO	Makefile:
317	NO	charset.c:
343	NO	Makefile:
346	NO	Kanji fixes for upper/lower case conversion with sjis characters. Code from Takashi Fujita <fujita@ainix.isac.co.jp>. Jeremy (jallison@whistle.com) 
358	NO	Makefile:  New program and support for dynamic codepage loading. charset.c: Dynamic codepage loading code. charset.h: Defines for file format. proto.h:   Updated. Jeremy (jallison@whistle.com) 
378	YES	"This commit does 3 main things:  1) put the encryption code in by default  with no #ifdef. It is still disabled by default so you need to add ""encrypt passwords = yes"" in smb.conf but at least all binaries will have it.  2) cleanup the kanji code so it compiles with no warnings  3) get rid of lots of uses of ugly non-portable C code. The main offender being things like ""register"" but also remove uses of the ""const"" keyword as there are compilers out there that don't support it and even those that do often complain about its usage. Users don't like warnings :-(  There is still some work to do. We need to replace the md4 code with our own implementation. The current code (from rfc1186) is PD but is not very portable. The new RFC (rfc1320) is more portable but adds copyright restrictions. I'll do a from-scratch MD4 soon.  We also need to test that what I've implemented is portable. It should be  but I'm too tired right now to test it on anything other than intel linux. "
379	NO	no longer needed 
380	YES	rewrote md4.c from scratch. This implementation should be portable and doesn't have any worries about RSA copyright. 
396	YES	Checkin to sync up oplock development code so that NT domain development code won't diverge.  Makefile: Fixed make proto (again). Added GLIBC2 fixes for Linux. includes.h: Added GLIBC2 fixes for Linux. proto.h: Much tidier. quotas.c: OSF/1 quota fix. reply.c: Fix from Ray Frush <frush@engr.colostate.edu> for zero NT timestamps. server.c util.c: First oplock checkin - nowhere near finished so bracketed with #ifdef USE_OPLOCKS. Done to make sync with NT domain code easier. Jeremy (jallison@whistle.com) 
397	NO	Makefile: Removed earlier errors. includes.h: Added INADDR_LOOPBACK define. locking.c: More code to support oplocks. proto.h: Updated. server.c: More code to support oplocks. Moved processing of an SMB out of process() into a separate function so it is easier to call from an oplock break. smb.h: Added oplock fields. Jeremy (jallison@whistle.com) 
399	NO	Adding Andrews buffer overflow fixes into the main branch. Jeremy (jallison@whistle.com) 
400	NO	Correctly rolled back interface.c (I was working on an older revision). This will now be the current revision. Jeremy (jallison@whistle.com) 
403	NO	dir.c: more pstrcpys. local.h: Add OPLOCK_BREAK_TIMEOUT. password.c: Fix for paranoia password server security bug. proto.h: Updated. reply.c: Oplock changes. server.c: Massive oplock changes - nearly there.... smb.h: oplock definitions. util.c: Add local message processing queues for oplocks. Jeremy (jallison@whistle.com) 
427	NO	"lsaparse.c smb.h: added 32 bit ""return status"" to the response structures. "
435	NO	I rewrote the name_mangle() and name_len(). The interface is the same  but I've simplified the code a bit and added a few comments.  I tested the changes and the output is the same as that produced by the original (at least  it was in all of my tests).  CRH 
436	NO	ipc.c: Added ERROR_MORE_DATA error if client buffer too small. server.c: Allow admin_user on read only shares. I think this is safe but it needs looking at. Jeremy (jallison@whistle.com) 
441	NO	added a dummy function (space in front so make proto doesn't pick it up) to call the unused static functions in pipes.c.  avoids need to move #if UNDEFINED_NTDOMAIN about  to stop compiler warnings while code is being developed  but might be released as-is. 
449	NO	added #ifdef NTDOMAIN.  added call to api_ntLsarpc instead of api_Lsarpc in ipc.c iff NTDOMAIN is defined. 
454	NO	After generating some discussion  listening to the opinions  and thinking about it for a while  I've decided to move the tree & list code into a separate subdirectory. 
456	NO	Makefile:  
457	NO	ipc.c :  
461	NO	namelogon.c :  
466	NO	getting somewhere.  ipc.c :  
468	NO	byteorder.h :  
473	NO	split pipes.c down into util  netlog and ntlsa. 
486	YES	fixed a stack overflow bug in api_lsa_req_chal()  changed the order of arguments to smbhash() in credentials.c. Luke  when you changed from E1() to smbhash() you didn't notice that the arguments are in a different order. This is why your new code was failing.  NT logon still fails  but now gets to SAMLOGON. It shouldn't take much to get it working now. 
520	NO	move calls to smbhash() inside smbdes.c (for legal reasons) 
521	NO	I am removing these from the source code in preparation for an upcoming 1.9.18alpha release. We can't release with this code in there as it currently stands as it might breach ITAR export restrictions in the US.  I've discussed ways around this with Jeremy and we can put the code back in with appropriate modifications once it is needed.  Note that this code isn't actually used in Samba yet  so removing it has no effect.  If anyone wants the code then look in ~samba-bugs/arcfour/ or grab it from the CVS attic. 
522	NO	casting cleanups 
523	YES	a major share modes reorganisation.  The shares modes code is now split into separate files. The shared memory implementation is in locking_shm.c. The slow implementation is in locking_slow.c  It is all controlled by a struct share_ops structure that has function pointers to the implementation of all the functions needed by a share modes implementation. An initialisation function sets up this structure. This will make adding new implementations easy and clean.  This also allowed me to get rid of the ugly code in smbstatus. Now status.c links to the locking code and calls methods in share_ops.  I also renamed some things and generally organised things in a much cleaner fashion. Defines and structures specific to each implementation have been moved to the appropriate file and out of smb.h. 
524	YES	util.c password.c :  
530	YES	rewrote the password server code using the new clientgen.c client interface  The new code uses a source netbios name equal to the Samba servers name  not the client name. It also uses NetWkstaUserLogon to do a full network logon. This means it will honour the servers logon restrictions (such as login times etc). 
545	NO	Makefile client.c clientutil.c clitar.c nmbsync.c :  
554	NO	nterr.c :  
559	NO	Makefile :  
565	NO	The browse synchronisation code in nmbsync.c now uses the clientgen.c code  which means we don't have to link with a fake getpass routine and we don't have a whole pile of global variables that really have nothing to do with nmbd and were there to keep the client code happy.  The code should function identically to what it did before (hopefully it was correct)  The only thing that now uses the horrible clientutil.c code is smbclient. 
571	YES	change the default file permissions on the SHARE_MEM_FILE* to 0644. smbstatus now gets only read permission on the share files and does no locking.  also get rid of some unnecessary umask(0) calls. smbd always runs with umask(0) 
581	YES	SYSV IPC implementation of fast share modes.  It will try sysv IPC first  then if that fails it will try mmap()  then after that it will try share files.  I have defined USE_SYSV_IPC for Linux  Solaris and HPUX at the moment. Probably a lot more could have it defined. In fact  the vast majority of systems support it. Need autoconf again :-)  It should actually be faster than the mmap() version  and doesn't need any lock files. This means the problem of the share mem file being on a NFS drive will be gone. 
599	NO	split ntclient.c down into appropriate modules. 
621	NO	blanked out these files  so that if someone does make proto  they don't interfere with the files in the rpc_pipes/ directory.  andrew doesn't want to lose any cvs history by moving files around  so he's going to look into that tomorrow. 
645	YES	a simple SMB torture tester. This will allow us to evaluate locking techniques more accurately. 
647	NO	client.c clientutil.c proto.h rpc_pipes/ntclientlsa.c rpc_pipes/ntclientnet.c rpc_pipes/ntclientpipe.c :  
654	YES	convert the credentials code back to uchar[8] from uint32[2]  This should fix the byte order problems (maybe!) 
657	YES	"Christian Lademann's contribution:  new capabilities in smb.conf.  '<' and '|' characters indicate read file and execute command respectively  and feed the output into the parameter (!!!).  '<$' and '|$' means run standard_sub_basic() on them.  this is going to be fun to document in smb.conf.5....  also  Christian created a new ""online"" service parameter.  services can be taken ""off-line"".... "
660	NO	Rolling back the files loadparm.c : to equivalent to version 1.67 reply.c : to equivalent to version 1.69 server.c : to equivalent to version 1.122 util.c : to equivalent to version 1.98  to remove the incorrect changes.  proto.h: The usual.  rpc_pipes/smbparse.c : Backeting stuff that SHOULD NOT BE IN THE                        none-NTDOMAIN build !  Jeremy. 
673	NO	following a cvs error  i am rewriting this monster-commit.  with bad grace.   Modified Files: 
682	NO	byteorder.h :  
683	NO	Rolled back tree state to 11:59pm 8th November 1997 EST to remove problems. Jeremy 
704	NO	this new cgi code includes the ability to act as a mini web server  allowing people to use web configuration of Samba without installing a web server 
711	NO	get rid of stat command (it is a hangover from an old experiment) 
740	NO	slight cleanup to the linked list handling 
743	YES	got rid of the WRAP_MALLOC code - mem_man does it better 
753	NO	This is it ! The mega-merge of the JRA_NMBD_REWRITE branch back into the main tree. For the cvs logs of all the files starting nmbd_*.c  look in the JRA_NMBD_REWRITE branch. That branch has now been discontinued. Jeremy. 
769	YES	client.c: clientgen.c: clientutil.c: clitar.c: Changed usage of receive_smb to new function client_receive_smb           except for one use of receive_smb in client.c. This is the           receive_smb used to discard packets received whilst in a           keyboard wait state. util.c: Created new function client_receive_smb that ignores session         keepalives just as the old receive_smb used to do. Created         internal function read_smb_length_return_keepalive that is         used internally by the changed receive_smb call.         Changed read_smb_len to not use an internal buffer - it is         never called with a null buffer so such code is redundant. Jeremy. 
775	YES	Backed out changes that attempted to address a pointer array using -1 0 1. Jeremy pointed out that there might be problems with this.  Darn shame. 
801	YES	docs/Support.txt: Removed consultant. source/Makefile: Added Volker's comment. source/nmbd_become_lmb.c: source/nmbd_browsesync.c: source/nmbd_incomingdgrams.c: Fixed userdata alignment problems. source/mem_man/mem_man.c: source/mem_man/mem_man.h: added smb_ prefix to stop namespace collisions. Jeremy. 
847	NO	*** empty log message *** 
852	YES	Fixed warnings with gcc (assignments inside if statements). Jeremy. 
862	YES	"A small raft of changes  I will sync up with 1.9.18 also. chgpasswd.c: Fixed typo in debug message. includes.h: Fix include for aix. kanji.c: Added cap_to_sj as inverse of sj_to_cap. loadparm.c: local.h: password.c: Added code for ""networkstation user login"" parameter. - patch from Rob Nielsen <ran@adc.com>. printing.c: Added further aix printing fixes. reply.c: Changed access time fetch to a function. trans2.c: Changed access time fetch to a function. time.c: Changed access time fetch to a function. server.c: Made NT redirector workaround final. util.c: Added debug for write_socket failing. Jeremy. "
874	NO	Code to work around a bug in FTP OnNet software NBT implementation. They do a broadcast name release for WORKGROUP<0> and WORKGROUP<1e> names and *don't set the group bit*.  Jeremy. 
878	NO	Change the multibyte character set support so that Kanji support is one case of multibyte character support  rather than being a specific case in single byte character support.  This allows us to add Big5 Chinese support (code page 950) and Korean Hangul support (code page 949) at very little cost. Also allows us to easily add future multibyte code pages.  Makefile: Added codepages 949  950 as we now support more multibyte codepages. asyncdns.c: Fixed problem with child being re-spawned when parent killed. charcnv.c charset.c client.c clitar.c kanji.c kanji.h smb.h util.c loadparm.c: Generic multibyte codepage support (adding Big5 Chinese             and Korean Hangul). nmbd.c: Fixed problem with child being re-spawned when parent killed. mangle.c: Modified str_checksum so that first 15 characters have more           effect on outcome. This helps with short name mangling as           most 'long' names are still shorter than 15 chars (bug was           foobar_mng and foobar_sum would hash to the same value  with           the modified code they hash differently. Jeremy. 
881	NO	 Jeremy is going to hate me ...  These are some hacks on SWAT. Maybe users will actually be able to work out how to use it now.  Unfortunately these changes required some editing in loadparm.c and smb.h which will make Jeremys merge job harder. Sorry! 
884	NO	added Date and Expires headers in the mini web server so clients know what they can cache. 
887	NO	Updates to all of these base level modules. Trees: Previously  the AVL node type was different than the node type used        in the BinTree and SplayTree modules.  It requires an additional        field to maintain AVL balance information.  I merged that field into        the base type (in ubi_BinTree.h) so that all three use the same        node type.  On most systems this will have zero effect on the node        size  due to word alignment.  The change allowed me to remove a        bigbunch of redundant code  which makes the AVL module smaller and        cleaner. Linked Lists:  I combined ubi_StackQueue into ubi_sLinkList.  The interface        has changed a tiny bit.  I added macros to ubi_dLinkList to round        it out a bit.  I have verified that the few Samba modules that use these tools (so far) do not have any problems with the changes.  Chris -)----- 
890	YES	For I have laboured mightily on Luke's code  and hath broken all I saw - the book of Jeremy  chapter 1 :-).  So here is the mega-merge of the NTDOM branch server code. It doesn't include the new client side pieces  we'll look at that later.  This should give the same functionality  server wise  as the NTDOM branch does  only merged into the main branch.  Any fixes to domain controler functionality should be added to the main branch  not the NTDOM branch.  This code compiles without warnings on gcc2.8  but will need further testing before we are sure all the working functionality of the NTDOM server branch has been correctly carried over.  I hereby declare the server side of the NTDOM branch dead (and all who sail in her :-).  Jeremy. 
895	NO	these have been replaced by swat 
896	YES	use password_ok() instead of calling crypt() 
898	NO	moved cgi.c and swat.c into a source/web/ directory. Note that you won't see a cvs add in the web directory or these files as I added them by directly copying in the repository. This keeps the history of the files intact. 
907	NO	added the ability to start/stop the server from SWAT.  I needed to modify the way the pidfile is handled in nmbd and smbd to do this. Jeremy  you may wish to look at what I've done as it probably breaks the Whistle use of pidfiles. In particular I've removed the -f option and instead smbd and nmbd always create a pidfile in the lock directory. 
911	YES	 =- added the ability to kill off individual connections from SWAT (from   the status page) - split the claim_connection() code into its own file - fixed the claim_connection() code to lock the file when manipulating   it - always claim a null connection at startup - fixed a bug in the pidfile code
930	YES	Adding the same changes to HEAD as were added to BRANCH_1_9_18.  Changed smbpasswd to be client-server for a normal user  rather than accessing the private/smbpasswd file directly (it still accesses this file directly when run as root  so root can add users/change a users password without knowing the old password).  A shakeout of this change is that smbpasswd can now be used to change a users password on a remote NT machine (yep - you heard that one right - we can now change a NT password from UNIX !!!!!).  Jeremy. 
936	YES	clientgen.c ipc.c smbpasswd.c: Fixes for warnings (from Herb). quotas.c: Linux quota fix. util.c: Ensure smb_read_error is zero in all calls that can set it. lib/rpc/include/rpc_misc.h lib/rpc/include/rpc_netlogon.h lib/rpc/parse/parse_misc.c lib/rpc/parse/parse_net.c lib/rpc/server/srv_netlog.c : Modify Luke's code to call SamOEMhash().  Jeremy. 
943	NO	nameconf.c is a stray .c file that shouldn't be in the distribution. It's a left over. Jeremy. 
946	YES	client.c: Fixed problem where debug level on command line was overridden by smb.conf. smbpasswd.c: Removed bugs I put in yesterday (thanks Luke :-) and added error message reporting for remote password changing. Jeremy. 
968	YES	I removed a static string that was in there because I planned to do something with it some day.  It was causing gcc to cough up warnings (not serious ones  mind you).  Don't worry... It will be back! Chris -)----- 
981	YES	Changes to allow Samba to be compiled with -Wstrict-prototypes with gcc. (Not a big change although it looks like it :-).  Jeremy. 
982	YES	"Changes include:  proto.h:  The unusual.  ;) reply.c:  I changes some function names  and updated reply.c to match.           See mangle.c below for more. server.c: Changed function names and parameters in file mangle.c  so           changed server.c calls to match.  See mangle.c below for more.  mangle.c:    I replaced the caching mechanism used for caching reverse mangled name   maps.  The old method was a large array of 256-byte strings.  Movement   in the stack (including push and pop) was done by memcpy()ing whole   chunks of memory around.    The new system uses the ubi_Cache module which  in turn  uses a splay   tree.  Entries are dynamically allocated using a minimum amount of   memory.  Searches are non-linear  which should speed things up a bit    too.  Overall  this should save memory and be faster.    Other changes:  I streamlined the is_mangled() test and made other   speed enhancements including replacing some static functions with   macros.  Added comments  etc.  Note:  Per an E'mail conversation with Andrew  the 'mangled stack'        parameter in smb.conf doesn't do anything anymore.  The cache is        now set for 16K bytes maximum memory usage.  The mangle stack        parameter is silently ignored.  This can easily be changed  but        I'd rather introduce a 'mangled cache memory' parameter and        remove 'mangled stack'.  Remaining problems:        While testing the module  I noticed that something is calling        name_map_mangle() twice.  The result is that names which contain        illegal characters are getting mangled twice.         Also  the entire module works by overwriting the input string.        This has a variety of nasty side effects.  Summary:    There's a lot still to be done  but the changes I have in place *should*   work in exactly the same way (except for the mangle stack parameter).   The rest of the bugs and other issues are separate.  Chris -)----- "
986	YES	ipc.c: Fix for printer queue spinning with Win95. nmbd.c: Fix for always overwriting log despite append setting. smb.h: Addition of last time password changed entry to account info. smbpass.c: Changes to support last time changed field in smbpasswd file. smbpasswd.c: Changes to support last time changed field in smbpasswd file. util.c: Fix for always overwriting log despite append setting. Jeremy. 
989	NO	clientgen.c: Changes 'cli_xxx_' calls to use the following regularized parameter syntax:     setup  setup_count  max_setup_count     params  params_count  max_params_count     data  data_count  max_data_count   (and if a reply is needed)     *reply_params  *reply_data_len    *reply_data  *reply_data_len  This allows the pointers and the lengths that relate to these pointers to be next to each other in the parameter list. This makes seeing what you are passing to these functions much easier to see.  Getting ready for adding the lib/rpc/client functions needed to do security=domain.  torture.c: Fixed it so it uses / rather than \\ internally for the //machine/share syntax.  Jeremy. 
990	YES	includes.h: Added John's redhat fix for QSORT_CAST. smbpass.c: Added lock depth code so calls to pw_file_lock() can be nested.            Fixed codedump problems in add_smbpwd_entry(). smbpasswd.c: Removed all the code that manipulated the password file              directly. Now *all* smbpasswd file changes are done through              the interfaces defined in smbpass.c This should make              the life of people adding alternate backend databases              *much* easier. lib/rpc/server/srv_netlog.c: Removed debug messages used to debug                              machine password changing. Jeremy. 
998	YES	 improved the secret buffer generation a bit. It now uses /etc/shadow and smbpasswd if possible  and doesn't put it all through a 32 bit bottleneck. 
1000	YES	genrand.c: Improved generation of random values  more secure. loadparm.c: Started add of 'security=domain' code. password.c: Fix for security=server NT bugs. reply.c: Started add of 'security=domain' code. server.c: Started add of 'security=domain' code. smb.h: Started add of 'security=domain' code. Jeremy. 
1003	YES	clientgen.c: Added rap error codes to cli_error  moved from smbpasswd.c password.c: Changed global cli -> pw_cli  removed strtok (bad strtok  bad :-) use in security=server  started to extend security=domain code. smbpasswd.c: Removed rap error code functions. Jeremy. 
1005	NO	These don't compile yet - but they are the core code in what will be DOMAIN_CLIENT called code. Jeremy. 
1009	NO	"This looks like a big change but really isn't. It is changing the global variables ""myname"" and ""myworkgroup"" to ""global_myname"" and ""global_myworkgroup"" respectively.  This is to make it very explicit when we are messing with a global (don't ask - it makes the domain client code much clearer :-).  Jeremy. "
1010	NO	First version that compiles. Much more to do..... Jeremy. 
1013	YES	This is the checkin that adds the security=domain functionality.  WARNING - so far this has only been tested against a Samba PDC (still waiting for IS to add me the machine accounts :-).  Still missing is the code in smbpasswd that will add a machine account password and change it on the domain controller  but this is not hard  and I will check it in soon.  Jeremy. 
1020	YES	Rolling clitar.c back to the previous rev 1.22 as the current one needs fixing (sorry). Jeremy. 
1021	YES	genrand.c: SGI compile warning fix. ipc.c: Fix for duplicate printer names being long. loadparm.c: Set bNetWkstaUserLogon to false by default - new code in password.c protects us. nmbd_logonnames.c: nmbd_namequery.c: nmbd_namerelease.c: Debug messages fix. password.c: SGI compile warning fix  fix for tcon() with bNetWkstaUserLogon call. reply.c: SGI compile warning fix. server.c Debug messages fix. smbpass.c: Fix for incorrect pointer. Jeremy. 
1022	YES	Fixes for the %U and %G problems people have reported. Essentially  multiple session_setup_and_X's may be done to an smbd. As there is only one global variable containing the requested connection name (sessionsetup_user)  then any subsequent sessionsetups overwrite this name (causing %U and %G to get the wrong name). This is particularly common when an NT client does a null session setup to get a browse list after the user has connected  but before a share has been mounted.  These changes store the requested_name in the vuid structure (so this only really works for user level and above security) and copies this name back into the global variable before the standard_sub call.  Jeremy. 
1027	NO	Rolling back again to the equivalent of revision 1.22  as the current CVS head branch will not compile. Jeremy. 
1035	YES	 remove unused ldap functions: add stub start/get/endldappwent routines. 
1043	NO	" proto.h was being a pain.  use ""make proto"" instead.  check release and release-alpha scripts operate correctly when it comes to generating a release or alpha release. "
1048	YES	 changed to use slprintf() instead of sprintf() just about everywhere. I've implemented slprintf() as a bounds checked sprintf() using mprotect() and a non-writeable page.  This should prevent any sprintf based security holes. 
1049	YES	changed to use slprintf() instead of sprintf() just about everywhere. I've implemented slprintf() as a bounds checked sprintf() using mprotect() and a non-writeable page.  This should prevent any sprintf based security holes. 
1052	YES	  ldap back-end database development  Makefile:  
1056	YES	This is a security audit change of the main source. It removed all ocurrences of the following functions :  sprintf strcpy strcat  The replacements are slprintf  safe_strcpy and safe_strcat.  It should not be possible to use code in Samba that uses sprintf  strcpy or strcat  only the safe_equivalents.  Once Andrew has fixed the slprintf implementation then this code will be moved back to the 1.9.18 code stream.  Jeremy. 
1057	YES	a new slprintf() function. This one is totally portable but a bit of a kludge. It is a safe kludge with our current code but I would like to revisit it at some point in the future.  The problem with the one I committed yesterday is it used non-portable functions. (it also had a bug in it  but that's another matter)  This one works by just using vsprintf() into a 8k buffer and a memcpy from there. No memory protection tricks or other non-portable stuff. This is safe because all calls to slprintf() in samba use strings which have been through a pstrcpy and thus are less than 1024 bytes. No call uses more than 2 of these strings. See what I mean by kludge? Note that the 8k is way overkill but I like overkill :)  Someday (after autoconf) we will replace this with something better  but meanwhile this is simple  secure and portable. 
1058	NO	 retired this file: it's not actually needed now that passdb.c provides the interface point. 
1061	YES	 - removed ldap_get_trust()  - #ifdef around putting 16 byte hashes instead of plaintext password. 
1072	YES	passdb.c server.c: Moved generate_machine_sid() into passdb.c for Jean-Francois           (who might want an LDAP version). Changed locking to free exclusive           lock as soon as possible to prevent contention. lib/rpc/parse/parse_samr.c lib/rpc/server/srv_samr.c: Changed last SID-as-string manipulation                            function to use DOM_SID structure. Jeremy. 
1078	NO	 Makefile:  
1080	YES	" - renamed some of the passdb.c functions: they have a prefix pdb_ on them  - split smbpass.c ""password file lock"" routines into smbpassfile.c: moved   trust account routines into smbpassfile.c as well "
1088	YES	chgpasswd.c: Changed back to getsmb... from getsam... ldap.c: Stoped dummy_function being prototyped. loadparm.c: Fixed slprintf sizes. nisppass.c: Fixed safe_strcpy sizes. nmbd_processlogon.c: Changed back to getsmb... from getsam... nttrans.c: Just a dump of new code. passdb.c: Moved stuff around a lot - stopped any lookups by rid. This           needs to be indirected through a function table (soon). password.c: Changed back to getsmb... from getsam... reply.c: Changed back to getsmb... from getsam... slprintf.c: Fixed prototype problems. smb.h: Fixed prototype problems. smbpass.c: Changed to getsmbfile.... smbpasswd.c: Changed back to getsmb... from getsam... lib/rpc/server/srv_netlog.c: Changed back to getsmb... from getsam... lib/rpc/server/srv_samr.c: Fixed rid lookup - use uid or gid lookup. lib/rpc/server/srv_util.c: Changed back to getsmb... from getsam... Jeremy. 
1096	YES	passdb.c: Fixed typo in coment. smb.h: Removed comments no longer valid. smbpass.c: Stopped dummy function from being prototyped. util.c: Fix for multibyte char problems with strlower  strupper and string_replace. Jeremy. 
1105	NO	Along the lines that Andrew suggested  I added a header called ubi_null.h. This header tries four different locations for a definition of NULL.  If NULL still hasn't been found  it defaults to ((void *)0).  All of the includes can be  essentially  overridden by defining NULL on the command line  as in -DNULL=((void *)0).  I have faith that this will avoid the problem of NULL being in different places on different systems.  If there is a system out there that doesn't define NULL in any of the headers I've included  then let me know *where* it's defined and I'll add another header.  Chris -)----- 
1106	YES	printing.c: Fixed overflow by one problem in LPRng. reply.c: Fixed password length modifiers to always be done          is none-encrypted mode used. This fixes Samba for          people who are using non-encrypted passwords with          security=server. Jeremy. 
1113	NO	 doesn't compile: don't care.  checking this in so people can see what's going on. 
1119	NO	smb.h: More NT SMB stuff (just defines). smbpass.c: Do *NOT* make this function static. It breaks the compile on gcc util.c: Getting closer to MS wildcard semantics. A trailing '*' matches         any trailing dot-separated components. trans2.c: Removed hacks that change multiple '?' -> '*' as this           breaks things now. trans2.h: Removed NT_FILE_ATTRIBUTE_NORMAL - now FILE_ATTRIBUTE_NORMAL is defined           in smb.h. Jeremy. 
1120	YES	loadparm.c: Added machine password timeout parameter - set to 7 days be default. password.c: Added code to tell server.c when machine password needs changing. server.c: Change machine password in idle cycles if it needs it. smbpassfile.c: Fixed up length calculations for machine password file. smbpasswd.c: Moved domain joining code/machine password changing code. lib/rpc/client/cli_netlogon.c: And this is where it now lives. Jeremy. 
1124	NO	Added Paul Eggerts LocalTime patch. Jeremy. 
1128	YES	ipc.c: Fix bug where we don't return the correct error code when client        gives a too-small buffer for share info. Fix from Gil Kloepfer <gil@arlut.utexas.edu> smb.h: server.c: Fix for a nastly little security problem with multi-user Windows NT           servers and Samba where the contents of the open-file cache can end           up being served out to users who shouldn't have access. This is some           *seriously* ugly code. Jeremy. 
1145	YES	Minor changes as I've now discovered gcc -pedantic-errors. This does the signed/unsigned warnings I've been missing. Jeremy 
1148	NO	ipc.c: map_username is now a BOOL function. reply.c: map_username is now a BOOL function. server.c: Added capability to do map_username on service names           when looking for a home directory. That's what the           original code would do. lib/rpc/server/srv_util.c: Changed domain_ to builtin_ for                            BUILTIN aliases. username.c: Work in progress on groupname map parameter. Jeremy 
1150	YES	Makefile: Added ubi_sLinkList.o as the groupname.o file needs it. Added groupname.o includes.h: Added ubi_sLinkList.h include. loadparm.c: Added groupname map parameter. password.c: Fix HPUX big_crypt. username.c: New user_in_list() code. Moved groupname map code to groupname.c lib/rpc/server/srv_util.c: Added lookup_wellknown_sid_from_name().  New groupname map stuff. Note that nothing currently uses this but at compiles ok.  Jeremy. 
1163	YES	clitar.c: Fixed gcc warning with comment in /* */ code. nmbd_winsserver.c: Remember to free packet in multi-homed register code.                    Use correct query_name_from_wins_server call instead of                    query_name call in multihomed code. Jeremy. 
1181	NO	nttrans.c: More NT SMB stuff. reply.c: Broke out the internals of reply_mv so that they may be called          externally from the NT transact rename. server.c: Changed stat calls to sys_stat - found in code review           of bugfix. Jeremy. 
1198	NO	Converted the browser database to a ubi_dLinkList.  This should reduce code size  etc.  Also did a bit of work to add comments. Chris -)----- 
1214	NO	merge from the autoconf2 branch to the main branch 
1223	NO	This is the checkin of the debug changes.    Makefile.in:  I've added debug.o.   proto.h    :  Rebuilt  as is standard for these sorts of things.   smb.h      :  New macros  etc.   util.c     :  Debug code removed.  I'll check in debug.c in the next step.  Chris -)----- 
1227	NO	This is the remaining set of changes needed to replace the changes lost when Andrew and I were both working with util.c.  I really don't know how I lost the autoconfigure changes (honest  I *did* run frequent updates).  Chris -)----- 
1237	NO	this gets smbd compiling and linking correctly with the new layout. 
1244	NO	split the system password checking routines out of smbd/password.c and into passdb/pass_check.c. This means SWAT no longer needs to link to smbd/password.c 
1245	NO	moved access.c into lib/ from smbd/ as it is needed by testparm. I modified it not to need any smbd specific structures and instead pass things from smbd. 
1267	YES	this is the bug change to using connection_struct* instead of cnum. Connections[] is now a local array in server.c  I might have broken something with this change. In particular the oplock code is suspect and some .dll files aren't being oplocked when I expected them to be. I'll look at it after I've got some sleep. 
1285	NO	 now that we have no global arrays we can start to split up the monster server.c without breaking things.  this splits off netprot.c and fileio.c for negprot and read/write/seek handling respectively. 
1286	NO	more splitting of server.c  created dosmode.c and filename.c 
1287	NO	this completes the splitup of server.c.  the splitup was done with an axe  not a scalpel  so there are some rough edges. I mostly wanted to get the general form right with fine tuning of what goes where to come later. Still  this is better than what we had before where server.c was a general repository for anything that didn't fit elsewhere. 
1327	YES	changed the size of a char array in the userdata_struct from 1 to 16 to account for padding/alignment issues. Eventually I'd like to find a way to get rid of this construct altogether as it is a bit error prone and hard to debug.  also added a new macro:  ZERO_STRUCTP() that takes a pointer to a structure and zeros the structure. Used in nmbd to zero allocated structures before freeing them to try to catch bugs a bit faster. 
1352	YES	More abstraction of file system data types  to move to a 64 bit file interface for the NT SMB's.  Created a new define  SMB_STRUCT_STAT that currently is defined to be struct stat - this wil change to a user defined type containing 64 bit info when the correct wrappers are written for 64 bit stat()  fstat() and lstat() calls.  Also changed all sys_xxxx() calls that were previously just wrappers to the same call prefixed by a dos_to_unix() call into dos_xxxx() calls. This makes it explicit when a pathname translation is being done  and when it is not.  Now  all sys_xxx() calls are meant to be wrappers to mask OS differences  and not silently converting filenames on the fly.  Jeremy. 
1360	YES	Ok - this is the 64 bit widening check in. It changes the configure to check for stat64 and friends  and then changes much of Samba to use the data type SMB_OFF_T for file size information.  stat/fstat/lstat/lseek/ftruncate have now become sys_stat etc. to hide the 64 bit calls if needed.  Note that this still does not expose 64 bit functionality to the client  as the changes to the reply_xxx smb's are not yet done.  This code change should make these changes possible.  Still to do before full 64 bit-ness to the client:  fcntl lock code. statfs code widening of dev_t and ino_t (now possible due to SMB_DEV_T and SMB_OFF_T types being in place).  Let me know if wierd things happen after this check-in and I'll fix them :-).  Jeremy. 
1367	YES	"tridge the destroyer returns!  prompted by the interpret_security() dead code that Jean-Francois pointed out I added a make target ""finddead"" that finds potentially dead (ie. unused) code. It spat out 304 function names ...  I went through these are deleted many of them  making others static (finddead also reports functions that are used only in the local file).  in doing this I have almost certainly deleted some useful code. I may have even prevented compilation with some compile options. I apologise. I decided it was better to get rid of this code now and add back the one or two functions that are needed than to keep all this baggage.  So  if I have done a bit too much ""destroying"" then let me know. Keep the swearing to a minimum :)  One bit I didn't do is the ubibt code. Chris  can you look at that? Heaps of unused functions there. Can they be made static? "
1392	YES	"configure configure.in: Added checks for statvfs64. Last bit of 64 bit widening (I hope :-). include/config.h.in: Added #undef STAT_STATVFS64. include/includes.h: Added SMB_STRUCT_STATVFS type  Changed SMB_BIG_INTEGER to                     SMB_BIG_UINT and SMB_BIG_INT types. include/smb.h: Added flag defines from CIFS spec. lib/debug.c: Fixed one more mode_t issue. lib/system.c: Added sys_statvfs wrapper. lib/util.c: Changed trim_string to use size_t. param/loadparm.c: Moved ""blocking locks"" into locking section. Alphabetised                   locking options. Question - shuld we do this for all options ? passdb/ldap.c: Changed SMB_BIG_INTEGER to SMB_BIG_UINT. passdb/nispass.c: Changed SMB_BIG_INTEGER to SMB_BIG_UINT. passdb/smbpass.c: Changed SMB_BIG_INTEGER to SMB_BIG_UINT. smbd/dfree.c: Changed to use 64 bit types if available. Moved to use unsigned               types. smbd/dosmode.c: Fixed one more mode_t issue. smbd/negprot.c: Changed literals to be FLAG_ #defines. smbd/nttrans.c: Removed dead code. smbd/open.c: Changed disk_free call. smbd/process.c: Changed literals to be FLAG_ #defines. smbd/reply.c: Changed disk_free call. smbd/trans2.c: Fixed but in SMB_QUERY_FS_VOLUME_INFO call. Was using                UNICODE - should use ascii. tests/summary.c: Added STAT_STATVFS64 check. Jeremy. "
1432	YES	Integration of Anders Blomdell <anders.blomdell@control.lth.se>'s smbpasswd changes. Not exactly the same as his code - several changes. Jeremy. 
1434	NO	not needed. 
1435	NO	added rpcclient program 
1436	NO	added wksinfo command to rpcclient  which don't work too good. 
1437	YES	"added in samr commands.  assistance in returning the missing functions  automatically removed because they were ""unused""  would be appreciated. "
1442	YES	Makefile.in: Fixed bug with continuation line causing proto to fail.              Added $(PROGS) $(SPROGS) as targets for make clean. acconfig.h: Added HAVE_IRIX_SPECIFIC_CAPABILITIES. configure.in: Added sys/capability.h header check.               Added function checks for srandom random srand rand.               Added HAVE_IRIX_SPECIFIC_CAPABILITIES test. includes.h: Added #include <sys/capability.h>. ntdomain.h: Moved struct acct_info into here from smb.h smb.h: Added KERNEL_OPLOCK_CAPABILITY define.        Moved enum action_type into rpcclient.h        Moved struct cli_state into client.h        Moved struct nt_client_info  struct tar_client_info  struct client_info              into rpcclient.h lib/genrand.c: Changed to use sys_random() & friends. lib/smbrun.c: Lose capabilities after fork. lib/system.c: Added set_process_capability()  set_inherited_process_capability()               sys_random()  sys_srandom(). lib/util.c: Added Ander's EFBIG lock check to fcntl_lock for 64 bit access to an             32 bit mounted NFS filesystem. nmbd/nmbd.c: Changed to use sys_random() & friends. nmbd/nmbd_browsesync.c: Changed to use sys_random() & friends. passdb/ldap.c: Missed one pdb_encode_acct_ctrl call. passdb/passdb.c: Changed to Ander's code for ' ' characters. passdb/smbpass.c: Added Ander's code to reset ACB_PWNOTREQ. script/mkproto.awk: Added 'long' to prototypes. smbd/chgpasswd.c: Lose capabilities after fork. smbd/open.c: Do the mmap *after* the kernel oplock. smbd/oplock.c: Removed stub code from kernel oplock path.                Added set_process_capability()  set_inherited_process_capability() calls. smbd/reply.c: Initialize count = 0  offset = 0. smbd/server.c: Added set_process_capability()  set_inherited_process_capability() calls. tests/summary.c: Ensure we have RANDOM or RAND. utils/smbpasswd.c: Added Ander's code to reset ACB_PWNOTREQ. utils/torture.c: Changed to use sys_random() & friends.  Jeremy. 
1457	YES	got rid of the memcpy() prototype and used includes.h instead.  gcc has a built-in memcpy which conflicts with the prototype. 
1488	YES	 Makefile.in :  
1515	NO	simplied the layout of the smbwrapper code. All those 3 line files were getting unwieldy 
1537	NO	"drat. We can't include sys/fcntl.h because that gives conflicts. Instead use ""01101"" for O_CREAT|O_WRONLY|O_TRUNC.  uggh. "
1547	NO	got rid of all assembly code and gcc special features. I'm hoping to get smbsh working with the normal sun compiler 
1550	NO	ported smbwrapper to SunOS4. It seems to work. pity so many binaries on my SunOS box are statically linked. 
1578	NO	- no getdents on OSF1 - try a new method of handling prototype mismatches in wrapped.c. We   now try to disable prototypes! 
1580	NO	more OSF1 changes as well as changes to allow us to use the standard includes.h in wrapped.c  thus making porting much simpler 
1584	NO	yet another attempt at making this stuff portable. This time I use minimal includes in wrapped.c 
1618	NO	dce/rpc 
1631	YES	getpwnam() failing is a serious error (corrupt smbpasswd database) 
1632	NO	rpcclient interactive login (with trust account changing if you are root) cli_session_setup handles null sessions correctly 
1640	NO	rpc client mods (ntlmssp flags) 
1656	YES	- don't use env variables for passwords and usernames (yeah!) - added a shared variable area based on a unlinked open file  and   implement a general get/set interface to it - cache hostname lookups and master ip lookups in shared variable area 
1660	NO	improved session reestablishment 
1661	NO	added command line options to smbsh 
1662	YES	"- dce/rpc code  - removed debug info in struni2 and unistr2 (security risk)  - rpc_pipe function was getting pointer to data then calling realloc *dur*  - password check function  the start of ""credential checking""    user  wks  domain  pass as the creden"
1667	YES	removed setenv()  replaced with smbw_setenv() 
1675	YES	signed / unsigned warnings (found by herb). how do i switch on these warnings in gcc????? 
1687	YES	libsmb/smbdes.c: #ifdef'ed out code prior to removal. rpc_client/cli_pipe.c: Inlined code removed from smbdes.c rpc_server/srv_samr.c: Fixed unused variable warning. rpc_server/srv_util.c: Inlined code removed from smbdes.c  Luke - the above changes are the first part of the changes you and I discussed as being neccessary at the CIFS conference. *PLEASE REVIEW THESE CHANGES* - make sure I haven't broken any of the authenticated DCE/RPC code.  smbd/nttrans.c: Fixed to allow NT5.0beta2 to use Samba shares                 with NT SMB support. smbd/open.c: Fixed mkdir when called from nttrans calls. smbd/server.c: Set correct size for strcpy of global_myworkgroup.  Jeremy. 
1692	NO	Removed previously #ifdef 0 'ed code. Jeremy. 
1699	YES	fixed problems with PWD - we no longer use the PWD env variable instead the shared variable area is used.  this fixes problems with /bin/sh under solaris 
1719	YES	added a vsnprintf() implementation from cvslock. See the notes on the license at the top of lib/snprintf.c  I've always been slightly uneasy about our half-baked vslprintf() implementation and the risks on platforms that don't have vsnprintf() so when I saw this code in another GPLd package I wanted it for Samba. 
1729	YES	Fixes to allow this to pass SGI compiler in -fullwarn mode (with one annoying exception I'm still looking at :-). Jeremy. 
1731	NO	Just moving things around a bit.  Chris -)----- 
1746	NO	Added scripting option (-s) to smbpasswd. Jeremy. 
1755	NO	converted smbclient to use clientgen.c rather than clientutil.c  I did this when I saw yet another bug report complaining about smbclient intermittently missing files. Rather than applying more patches to smbclient it was better to move to the more robust clientgen.c code.  The conversion wasn't perfect  I probably lost some features of smbclient while doing it  but at least smbclient should be consistent now. It if fails it should _always_ fail rather than giving people the false impression of a reliable utility.  the tar stuff seems to work  but hasn't had much testing as I never use it myself. I'm sure someone will find bugs in my conversion of smbtar.c. It was quite tricky as it did a lot of its own SMB calls. It now uses clientgen.c exclusively.  smbclient is still quite messy  but at least it doesn't build its own SMB packets.  I haven't touched smbmount as I never use it. Mike  do you want to convert smbmount to use clientgen.c? 
1760	NO	util functions split into relevant modules  first pass. 
1761	NO	rpcclient registry commands. 
1783	YES	Moved some code (NTLMSSPcalc) out of smbdes and inline for paranioa resons and my own piece of mind... Jeremy. 
1786	YES	extracted the password change code from smbpasswd and used it in swat instead of opening pipes and other horrible stuff. 
1791	YES	cleaning up conflicts between group code not yet committed and changes from yesterday by me  jeremy and andrew.  jeremy  your ACB_PWNOTREQ mod would have caused a crash if the user didn't exist (first check should be for smb_pass != NULL) 
1815	YES	remove code that allows installation via cgi  swat will now give an error message if run via cgi 
1831	YES	"- group database API.  oops and oh dear  the threat has been carried out:   the pre-alpha ""domain group"" etc parameters have disappeared.  - interactive debug detection  - re-added mem_man (andrew's memory management  detects memory corruption)  - america"
1836	NO	Added the same open()/fopen()/creat()/mmap() -> sys_XXX calls.  Tidied up some of the mess (no other word for it). Still doesn't compile cleanly. There are calls with incorrect parameters that don't seem to be doing the right thing.  This code still needs surgery :-(.  Jeremy. 
1876	YES	Makefile.in: Added maintainer mode fixes. aclocal.m4: Added AC_LIBTESTFUNC. configure.in: Fixed -lsecurity -lsec problems. client.c: dos_ fixes. groupdb/aliasunix.c: Dead code removal. include/includes.h: Added default PRINTCAP_NAME. lib/genrand.c: dos_ fixes. lib/replace.c: Added strtoul. lib/system.c: dos_ fixes. lib/util.c: dos_ fixes. lib/util_sid.c: Signed/unsigned fixes. lib/util_str.c: removed bad const. locking/locking_slow.c: dos_ fixes. printing/printing.c: dos_ fixes. rpc_server/srv_samr.c: Dead code removal. rpc_server/srv_sid.c: global_myworkgroup defined with wrong size AGAIN ! smbd/dir.c: dos_ fixes. smbd/open.c: dos_ fixes. smbd/oplock.c: dos_ fixes. smbd/reply.c smbd/server.c smbd/service.c smbd/uid.c: dos_ fixes.  Jeremy. 
1886	NO	retired two modules to preserve their cvs history. added their replacements  added sam password database API modules 
1949	NO	trying to track down issues in get_home_dir(). 
1958	NO	Added some debugging to clitar ... 
1959	NO	Fixed problems in debug code because I did not compile first :-( 
1985	YES	removed encrypt-password code pre-cli_session_setup()  session setup fn decides whether to encrypt password or not. 
2015	YES	"UNICODE cleanup (see lib/util_unistr.c).  No more ugly static library buffers and all functions take a destination string length (especially unistrcpy was rather dangerous; we were only saved by the fact that datagrams are limited in size). "
2067	YES	querysecret now shows the real  fairdinkum  decrypted secret :-) 
2077	YES	Another UNICODE issue - this time BUFFER2 was being transmitted incorrectly. 
2117	YES	Changed calls to strncat() to safe_strcat().  Fix from SAMBA_2_0 branch. 
2131	YES	Removed unused vfs_read_data() function at the request of tridge.  Removed unnecessary SSL stuff from vfs_write_data(). 
2153	NO	last part of RPC api change.  and of rpcclient eventlog funtion  
2156	NO	"Jani Jaakkola's ""getpwuid() / getpwnam()"" hash-cache-hack "
2165	NO	Some more BDC-related fixes  mainly to the NET_SAM_SYNC RPC with respect to alignment  missing fields  etc. - it should now work correctly. There is still the problem of decoding the private data field. 
2178	YES	improving authentication code (tidyup). 
2179	YES	"smbclient modified to use cli_establish_connection().  smbclient therefore now uses improved authentication.  smbclient now ""broken"" for ""scripts"" based on DEBUG() output.  cli_establish_connection() requires modification to support old scripts. "
2180	NO	removed old code/comments. 
2207	YES	removed strncpy() 
2282	NO	split matthew's sync command (only currently called from smbpasswd) into a separate module 
2295	YES	- added rudimentary CAP_UNICODE support because i thought it was part of a problem i was having.  - added rudimentary CAP_STATUS32 support for same reason.  - added hard-coded  copy-the-same-data-from-over-the-wire version of CAP_EXTENDED_SECURITY  which 
2296	YES	adding CAP_EXTENDED_SECURITY support in a hurry last week.  forgot to deal with linking issues in other binaries 
2313	YES	various.  debug levels changed.  nmbd doesn't need libsmb/clienttrust.c. samr_lookup_rids() moved to a dynamic memory structure not a static one limited to 32 RIDs.  cli_pipe.c reading wasn't checking ERRmoredata when DOS error codes negotiated (this terminates MSRPC code with prejudice). 
2338	NO	general  drastic improvements to rpcclient.  added samgroup <groupname> command added samgroupmem <groupname> command  added proper registry key completion  added sam command user-completion (e.g samuser [tab])  added sam command group-completion (e.g samgroup [tab]) 
2387	NO	added \PIPE\browser plus experimental brsinfo command.  you wouldn't believe the XXXX that MIGHT be involved in getting nt5rc2 to join a samba domain... 
2393	NO	doing a code reshuffle.  want to add code to establish trust relationships. 
2405	NO	another two. 
2422	NO	whoa.  _major_ restructure of rpcclient.  fixed some buuugs  created a few. found out that getopt() _must_ have optind set to 0 before reuse.  still haven't decided what to do with the net* api yet... 
2426	NO	further abstraction involving client states.  main client-side code is pretty much independent of SMB client states  which will make it easier to add other transports. 
2437	NO	first attempt at getting \PIPE\NETLOGON working.  it's pretty horrible. 
2445	NO	split display.c into modules. 
2447	YES	1) when no domain used in ntlogin test command  should use default one    from previous lsaquery command.  over-ridden from DOMAIN\username  2) initialisation of cli_state is a little more specific: sets use_ntlmv2    to Auto.  this can always be over-ridden.  3) fixed reusage of ntlmssp_cli_flgs which was being a pain  4) added pwd_compare() function then fixed bug in cli_use where NULL    domain name was making connections multiply unfruitfully  5) type-casting of mallocs and Reallocs that cause ansi-c compilers to bitch 
2449	NO	fixing joining to domain plus something weird going down with nt logins... 
2482	YES	the first independent msrpc daemon - lsarpcd.  one horrible cut / paste job from smbd  plus a code split of shared components between the two.  the job is not _yet_ complete  as i need to be able to do a become_user() call for security reasons.  i picked lsarpcd first because you don't _need_ security on it (microsoft botched so badly on this one  it's not real.  at least they fixed this in nt5 with restrictanonymous=0x2). fixing this involves sending the current smb and unix credentials down the unix pipe so that the daemon it eventually goes to can pick them up at the other end.  i can't believe this all worked!!! 
2483	YES	ABOUT TIME!!!!!!!!  damn  this one is bad.  started  at least two days ago  to add an authentication mechanism to the smbd<->msrpc redirector/relay  such that sufficient unix / nt information could be transferred across the unix socket to do a become_user() on the other side of the socket.  it is necessary that the msrpc daemon inherit the same unix and nt credentials as the smbd process from which it was spawned  until such time as the msrpc daemon receives an authentication request of its own  whereupon the msrpc daemon is responsible for authenticating the new credentials and doing yet another become_user() etc sequence. 
2489	NO	"final part of ""first"" phase converting over to msrpc daemon architecture. done a minimal amout of clean-up in the Makefile  removing unnecessary modules from the link stage.  this is not complete  yet  and will involve some changes  for example to smbd  to remove dependencies on the password database API that shouldn't be there.  for example  smbd should not ever call getsmbpwXXX() it should call the Samr or Lsa API.  this first implementation has minor problems with not reinstantiating the same services as the caller.  the ""homes"" service is a good example. "
2491	NO	first pass at updating head branch to be to be the same as the SAMBA_2_0 branch 
2492	NO	2nd phase of head branch sync with SAMBA_2_0 - this delets all the files that were in the head branch but weren't in SAMBA_2_0 
2509	NO	first cut at using the tdb code for the connections structure  the SWAT status page and smbstatus. It made the code _much_ simpler  I wish we'd done a database module a long time ago! 
2510	YES	converted all our existing shared memory code to use a tdb database instead of either sysv or mmap shared memory or lock files.  this means we can now completely remove 
2527	NO	fixed more locking bugs - all seems OK now 
2540	NO	"added the unexpected packet database (unexpected.tdb) this means ""nmblookup -S"" now always works  even with broken servers the database stores all unexpected replies and these can be accessed by any client. while doing this I cleaned up a couple of functions  and put in place a better trn_id generator. in most places the code got quite a bit simpler due to the addition of simple helper functions.  I haven't yet put the code in to take advantage of this for pdc replies - that will be next. Jeremys pdc finding code will then work :) "
2542	NO	got rid of mem_man yamd is much better  and doesn't require any source code changes if you haven't seen yamd then take a look at 
2544	NO	simple mods to add msrpc pipe redirection.  default behaviour: fall back to using internal msrpc code in smbd. 
2548	YES	oops  must use read_data() not read()  as read() may only provide part of the data stream.  read_data() is a wrapper to guarantee receiving exactly the requested number of bytes. 
2550	YES	"Added ""crap"" fix for rotating string buffers. (Increased to 20  added #define). Andrew - please fix this properly when you have time :-). Jeremy. "
2553	YES	implemented talloc() as described on samba-technical. This fixes the lp_string() bug properly.  we still need to add lp_talloc_free() calls in all the main event loops  I've only put it in smbd and nmbd thus far. 
2565	YES	don't use strcpy 
2566	NO	this looks like a big commit  but it isn't really :)  This fixes our netbios scope handling. We now have a 'netbios scope' option in smb.conf and the scope option is removed from make_nmb_name()  this was prompted by a bug in our PDC finding code where it didn't append the scope to the query of the '*' name. 
2642	YES	Modified auto alignment of ud[] struct on stack to be declared as an array of pointers. This should cause alignment on a correct boundary.. Spotted by Darren Reed <darrenr@telnetmedia.com>. Jeremy. 
2745	YES	Added replacement functions sys_popen and sys_pclose. These are based on the glibc source code and are safer than the traditional popen as they don't use a shell to exec the requested command. Now we have these functions they can be tightened up (environment etc.) as required to make a safe popen. It should now be safe to add the environement variable loading code to loadparm.c Jeremy. 
2759	YES	"lib/system.c: Fixed gcc warnings. nmbd/nmbd_processlogon.c: Use ""True"" and ""False"" instead of 1 and 0. Others - preparing for multiple pdu write code. Jeremy. "
2767	NO	"Allow tdb databases to be created ""in memory"" without having a file associated with them.  tdb can then be used as a hash table data structure. "
2789	NO	Not used. Functionality folded back into rpc_server/srv_pipe.c (where it originally came from). Jeremy. 
2796	NO	Fix for names with spaces and some I18N filename issues from V. Fyodorov <V.Fyodorov@VAZ.RU>. Jeremy. 
2798	YES	Cleaning warnings from configure.developer 
2826	NO	indent update to make t easier to see setuid mods in TNG.  some code from these modules i had to leave out (nothing to do withj setuid) 
2837	NO	moved nmblib-specific code from util.c to nmblib.c. 
2882	NO	split out the lpq parsing code into a separate file printing/lpq_parse.c  getting ready for the new printing backend 
2886	NO	the bulk of the changes to get rid of fd_ptr and move print open handling to printing/printing.c  most of this was just replacing things like fsp->fd_ptr->fd with fsp->fd  the changes in open.c are quite dramatic. Most of it is removing all the functions that handled the fd multiplexing 
2892	YES	"finally got sick of the ""extern int Client"" code and the stupid assumption that we have one socket everywhere  while doing so I discovered a few bugs!  1) the clientgen session retarget code if used from smbd or nmbd would cause a crash as it called close_sockets() which closed our main socket! fixed by removing close_sockets() completely - it is unnecessary  2) the caching in client_addr() and client_name() was bogus - it could easily get fooled and give the wrong result. fixed.  3) the retarget could could recurse  allowing an easy denial of service attack on nmbd. fixed. "
2903	NO	Roll back to using static MACHINE.SID after consultation with Andrew. This code will be removed soon and a SID auto-generated from (probably) primary hostname and never stored in a file will replace it. Jeremy. 
2920	NO	the fsp needs a jobid in it now   
2922	NO	the bulk of the changes. Also split the loadparm related code into printing/load.c so swat can get it without linking to the backend code  
2934	NO	converted a bunch more functions to use a fd instead of a FILE*  to support some of this I added the following functions in util_file.c  file_lines_pload : load lines from a pipe file_pload : load a pipe into memory 
2936	NO	moved standard_sub() and friends into a separate module 
2937	NO	removed some obsolete configure tests (sysv ipc etc) 
2938	NO	got rid of some more old configure tests and includes 
2948	NO	"- got rid of the ""passive"" option - cleaned up the standard_sub_*() calls a lot "
2949	NO	patch from luke to split out lanman code from ipc.c into lanman.c 
2977	YES	moved INSURE hook into util.c 
2986	NO	split clientgen.c into several parts  the next step is splitting out the auth code  to make adding lukes NTLMSSP support easier 
3011	NO	- removed all our old wildcard matching code and replaced it with a call to ms_fnmatch(). This also removes all the Win9X semantics stuff and a bunch of other associated cruft.  - moved the stat cache code into statcache.c  - fixed the uint16 alignment re
3052	NO	added ability to present lock tests 
3055	YES	added -A analyze mode to locktest - it can now automatically prune the list of locks that cause a failure 
3061	YES	an even simpler example of NT gettings its locking code wrong. This one doesn't even need two connections to the box  just two file handles.  it is a very simple case actually  and one I think will happen quite a lot in real life. I wonder how they haven't noticed it? I checked and W2K has the same bug. 
3083	YES	added secrets.tdb and changed storage of trust account password to use it 
3127	NO	an imcompatible tdb format change (sorry!)  this will give us a much nicer migration path for the proposed semaphore code 
3144	YES	vastly improved awk based code generator now handles recursive function definitions  unions etc it is sufficient for some basic types like UNISTR2 and BUFFER5 to be defined in the *.struct file and used successfully  this generator uses templates (in *.tpl files) for all code generation  allowing easy replacement of the backend functions 
3159	YES	The new msdfs implementation that uses symlinks to point to other servers. Very intuitive.  Removed the dfs map parsing code and tdb maintenance code (files msdfs/parse_dfs_map.c & msdfs/msdfs_tdb.c)  dfs map loading and unloading calls (param/loadparm.c smbd/server.c).  Added code to display msdfs format symlinks as directories in a transact2_findfirst/findnext. (smbd/trans2.c)  Modified msdfs/msdfs.c to use the msdfs symlinks to create dfs referrals.  Changed msdfs/README to reflect new operability. 
3161	YES	another awk parser update we can now handle arrays of structures  pointers to structures  pointers in unions etc 
3185	NO	a fairly big change in spoolss. got rid of the forms  drivers and printers files in the nt drivers directory and instead use a single tdb  note that this is _not_ all finished. 
3199	YES	move srandom to after connect so random stuff in clientgen doesn't change seed 
3214	YES	SMBnttrans.  modified io_uint8s to return address of actual data instead of a copy  on unmarshalling.  removed fstring  made it io_string  did same thing.  io_string() and io_wstring() should be wrapped in a STRING typedef which is bit-switched on FLG2:Unicode. 
3224	NO	lp_server_role() + use in srv_reg. 
3230	NO	messing about. 
3233	NO	Fixed interface between new ACLS and nttrans code. Jeremy. 
3238	YES	Getting back to a compilable state (not there yet but close). Added patches for random -> sys_random. Added set_effective_xxx patches for AFS code. Memory allocation changes in spoolss code. Jeremy. 
3280	YES	Bringing these up to date with what I've got on my site.  The fixes include the change that prevents 'insure' from becomming confused and issuing leak reports.  Some minor speed fixes.  That sort of thing.  Chris -)----- 
3296	NO	"continued the split of the kernel level oplocks code into a more modular form. In this pass I added oplock_irix.c and added a ""struct kernel_oplocks"" that describes a kernel oplock implementation. "
3302	NO	split all the change notify code out into a separate module smbd/notify.c. All the data structures are now private to that module.  this is in preparation for Linux kernel support for change notify (coming soon to a CVS tree near you) 
3312	NO	added -L switch to tell smbtorture to use oplocks 
3315	NO	allow for lots of connections per server 
3386	NO	Merge from TNG. 
3395	NO	first pass at merging rpcclient from TNG to HEAD.  You can get a semi-connection and a rpcclient prompt  but no functionality there yet. Will be a few more days on that.  --jerry 
3427	NO	Moved winbind client functions from various odd locations to nsswitch/wb_client.c  Merge of nsswitch/common.c rename to nsswitch/wb_common.c from TNG. 
3443	NO	adding more spoolss command into rpcclient.  They don't all work currently.  More to come later.   --jerry 
3446	YES	removed prs_data()  prs_free_data()  and prs_realloc_data() as these were unneeded and replaced by the real functions already in HEAD.  Added a few more functions to parse_spoolss.c to help with the rpcclient merge from TNG. 
3449	NO	More functions merged from TNG for rpcclient.  They don't all work currently as I have to do something about the policy handle caching issues.    --jerry 
3476	NO	Added EnumPorts() and fixed up some problems with the other spoolss client calls.  Also cleaned up output for 'help' command.    jerry 
3528	NO	fixed help string 
3591	NO	made reopen_logs() always re-open logs  not try and be smart about not re-opening in some circumstances. This fixes a problem where a HUP does not re-open logs and leaves the log open on a unlinked file. 
3668	YES	Restructuring of the code to remove dos_ChDir/dos_GetWd and re-vector them through the VFS. All file access/directory access code in smbd should now go via the vfs. Added vfs_chown/vfs_chmod calls. Still looking at vfs_get_nt_acl() vfs_set_nt_acl() call API design. Jeremy. 
3683	YES	Missing null termination on printer changenotify message caused insure error. Jeremy. 
3686	NO	"utf-8 and EUC3 patch from Hiroshi Miura Samba User Group Japan staff. mkdir high bits patch from Robert Dahlem"" <Robert.Dahlem@gmx.net>. jeremy. "
3698	NO	Fixes from Damian at Cisco to tidy up some tdbtool issues. Jeremy. 
3700	NO	"Restructuring of vfs layer to include a ""this"" pointer - can be an fsp or a conn struct depending on the call. We need this to have a clean NT ACL call interface. This will break any existing VFS libraries (that's why this is pre-release code). Andrew gets credit for this one :-) :-).  In addition - added Herb's WITH_PROFILE changes - Herb - please examine the changes I've made to the smbd/reply.c code you added. The original code was very ugly and I have replaced it with a START_PROFILE(x)/END_PROFILE(x) pair using the preprocessor. Please check this compiles ok with the --with-profile switch. Jeremy. "
3701	NO	Inlined many of the vfs_XXX calls as macros for speed. Jeremy. 
3719	YES	don't use gets() ! 
3747	NO	Fix to allow smbd to call winbindd if it is running for all group enumeration  falling back to the UNIX calls on error. This should fix all problems with smbd enumerating all users in all groups in all trusted domains via winbindd. Also changed GETDC to query 1C name rather than 1b name as only the PDC registers 1b. Jeremy. 
3757	NO	Ok - this is a big patch - and it may break smbd a bit (although I hope not). If you encounter strange file-serving behavior after this patch then back it out. I analysed our stat() usage and realised we were doing approx. 3 stat calls per open  and 2 per getattr/setattr. This patch should fix all that. It causes the stat struct returned from unix_convert() (which now *must* be passed a valid SMB_STRUCT_STAT pointer) to be passed through into the open code. This should prevent the multiple stats that were being done so as not to violate layer encapsulation in the API's.  Herb - if you could run a NetBench test with this code and do a padc/par syscall test and also run with the current 2.2.0 code and test the padc/par syscalls I'd appreciate it - you should find the number of stat calls reduced - not sure by how much.  The patch depends on unix_convert() actually finding the file and returning a stat struct  or returning a zero'd out stat struct if the file didn't exist. I believe we can guarentee this to be the case - I just wasn't confident enough to make this an assertion before.  Ok ok - I did write this whilst at the Miami conference..... sometimes you get a little free time at these things :-).  Jeremy. 
3766	NO	We already have a perfectly good next_token() function we should be using instead of strtok - this fixes a bug with NT users with spaces in their names when using winbindd. Needs to be added to the other parse_lpXX functions (currently only added to lprng parsing code). Jeremy. 
3781	YES	Added a authentication hook to smbwrapper which allows a (username  workgroup  password) tuple to be provided by another function. 
3788	NO	"Fixes for sample VFS audit code from ""Brad Sahr"" <bsahr@macromedia.com>. Jeremy. "
3807	YES	"Large commit which restructures the local password storage API. Currently the only backend which works is smbpasswd (tdb  LDAP  and NIS+) are broken  but they were somewhat broken before. :)  The following functions implement the storage manipulation interface  /*The following definitions come from  passdb/pdb_smbpasswd.c  */  BOOL pdb_setsampwent (BOOL update); void pdb_endsampwent (void); SAM_ACCOUNT* pdb_getsampwent (void); SAM_ACCOUNT* pdb_getsampwnam (char *username); SAM_ACCOUNT* pdb_getsampwuid (uid_t uid); SAM_ACCOUNT* pdb_getsampwrid (uint32 rid); BOOL pdb_add_sam_account (SAM_ACCOUNT *sampass); BOOL pdb_update_sam_account (SAM_ACCOUNT *sampass  BOOL override); BOOL pdb_delete_sam_account (char* username);  There is also a host of pdb_set..() and pdb_get..() functions for manipulating SAM_ACCOUNT struct members.  Note that the struct passdb_ops {} has gone away.  Also notice that struct smb_passwd (formally in smb.h) has been moved to passdb/pdb_smbpasswd.c and is not accessed outisde of static internal functions in this file.  All local password searches should make use of the the SAM_ACCOUNT struct and the previously mentioned functions.  I'll write some documentation for this later.  The next step is to fix the TDB passdb backend  then work on spliting the backends out into share libraries  and finally get the LDAP backend going.  What works and may not:  "
3813	NO	Merge from appliance head of JR's changes for driver versioning. Jeremy. 
3833	YES	Another large patch for the passdb rewrite.    o added BOOL own_memory flag in SAM_ACCOUNT so we could     use static memory for string pointer assignment or     allocate a new string    o added a reference TDB passdb backend.  This is only a reference     and should not be used in production because 
3857	NO	Added print_freelist command. Jeremy. 
3862	NO	 =- better parsing - started to add non-numeric support
3890	NO	Changed to sourceforge tdb code. This includes spinlocks (so we now have a --with-spinlocks option to configure  this does mean the on-disk tdb format has changed  so 2.2alphaX sites will need to re-create their tdb's. The upside is no more tdb fragmentation and a +5% on netbench. Swings and roundabouts.... Jeremy. 
3901	NO	Cause smbd to use the new posix_acls code  not the old unix_acls code. Currently does exactly the same thing (returns ACLs the same way). This code is written to try and get a POSIX ACL via the abstract sys_XX interface  then fall back to providing a UNIX based ACL if the calls fail. Seems to work. Next step is to add a --with-posix-acls to configure.in and then check on a POSIX ACL system that a complex ACL is returned correctly as an NT ACL. Note that the ACL set (a more complex problem) is not addressed yet. Jeremy. 
3905	NO	Fixed bug with tdb_next_lock failing when reaching then end of a hashchain and the next hashchain is empty. Jeremy 
3926	NO	code review of rpcclient    o added some comments   o abstracted a few code bits   o cleaned up some code by removing unused code paths    -- jerry 
3972	NO	implemented a much nicer name_status() interface. It now returns a list of structures rather than the dodgy parsing code we had before  this also gets smbw working correctly with no initial workgroup (using name_status_find on __MSBROWSE__ returns) 
3995	NO	The latest changes to libsmbclient ...  It can now do a directory listing for workgroups  servers  and shares  and  with a bit more effort  it will be able to list directories and files.  I also does not request a username and password for the IPC$ share  but it should if the first attempt to connect fails. 
4003	NO	Update the tree.c GTK+ App so it can walk down directories etc ... 
4020	NO	Start of a rewrite of rpcclient based on the libsmb rpc client routines. Currently there are a small selection of lsa  samr and spoolss functions implemented.  More to follow... 
4021	NO	Merge of various fixes from the tng headers. 
4031	NO	Many bug fixes to the libsmbclient.c code plus    - an implementation of smbc_readdir   - extensions to tree.c to show files in a second window   - changes to auth_fn to provide buffers for username  password  etc     from caller rather than callee 
4088	YES	"Changes from APPLIANCE_HEAD:     source/include/proto.h         - make proto      source/printing/nt_printing.c     source/rpc_server/srv_spoolss_nt.c         - Fix for the overwriting of printerdata entries when WinNT and           Win2k are modifying printer parameters on PCL printers. Turns out           that Win2k creates a printer with a NULL devmode entry and then           expects to set it on *OPEN* (yes this is insane). So we cannot           return a ""default"" devmode for a printer - and we must allow an           open to set it.      source/tdb/tdb.c         - Show freelist in an easier format. Show total free.         - When storing a new record  allocate memory for the key + data           before the tdb_allocate() as if the malloc fails a (sparse) hole           is left in the tdb.      source/tdb/tdbtool.c         - Show freelist in an easier format. Show total free.      source/tdb/Makefile         - cleaned up Makefile dependancies      source/smbd/lanman.c         -  Fix for Win9x corrupting it's own parameter string.      source/printing/printfsp.c     source/printing/printing.c     source/rpc_server/srv_spoolss_nt.c     source/smbd/close.c         - Added normal close parameter into print_fsp_end() which treats an           abnormal close as error condition and deletes the spool file. "
4107	NO	Added commented/documented version of libsmbclient.h and fixed up a small problem in libsmbclient.c where we no longer pass the workgroup. 
4113	YES	It compiles for me now :-). rpc_server/srv_lsa.c - added fix to allow w2k clients to join a Samba domain - odd or even domain name length. Needs more testing. Jeremy. 
4118	NO	samba/source/nmbd/nmbd.c
4121	YES	Excise snprintf -> slprintf. srv_samr.c: duplicate gid fix. srv_spoolss_nt.c: Merge of JF's work. uid.c: Fix for returning names when a PDC. Jeremy. 
4126	NO	Improve the sample GTK+ client program to make it a bit more functional. 
4141	NO	yipee! client unicode now works well with nt 
4145	NO	the unicode conversion of our client code is complete enough to be enabled by default  you can disable it by setting the environment variable CLI_FORCE_ASCII 
4155	NO	fixed character set init in smbw_sample 
4177	YES	Fix some errors uncovered in libsmbclient by the test suite Fix some problems with unused variables and reaching the end of a   nonvoid function 
4226	NO	Fixes to testsmbc to ensure it will compile on SGI ... 
4230	YES	"Serious (and I *mean* serious) attempt to fix little/bigendian RPC issues. We were reading the endainness in the RPC header and then never propagating it to the internal parse_structs used to parse the data. Also removed the ""align"" argument to prs_init as it was *always* set to 4  and if needed can be set differently on a case by case basis. Now ready for AS/U testing when Herb gets it set up :-). Jeremy. "
4236	NO	Sync up Urbans changes from 2.2 into HEAD. Jeremy. 
4238	NO	Merge of new 2.2 code into HEAD (Gerald I hate you :-) :-). Allows new SAMR RPC code to merge with new passdb code. Currently rpcclient doesn't compile. I'm working on it... Jeremy. 
4245	YES	Dead code removal. Not used anywhere. Jeremy. 
4247	YES	Moved cruft out of smb.h into ntdomain.h where it belongs. dc struct now in pipe struct (where used) rather than user_struct. Secured machine account password changing in srv_netlog_nt.c - ensure that only the given machine can change its own password. May need to free this up later for NT admin tools  but this is a fail-safe secure position for now. Jeremy. 
4272	NO	simpler clistr interface which handles individual packets having unicode bit set differently to capabilities 
4273	NO	don't need srvstr_push_size or srvstr_pull_size 
4277	NO	AS/U on a sparc now joins and authenticates against a Samba PDC ! Jeremy. 
4294	NO	enable unicode on the wire by default in smbd  the unicode support isn't complete  but it is good enough to be usable for a test server. 
4310	NO	much better readline support from Simo Sorce  with some mods from me to make it a bit simpler 
4348	NO	Fix for ENOSPC from DCB. Jeremy. 
4350	YES	Added NFS quota support for Solaris 5.x from Alan Romeril <a.romeril@ic.ac.uk>. sun1.samba.org is down at the moment so I can't test the compile on this. I'm sure Solaris people using quotas will scream if I've meesed anything up :-). Jeremy. 
4352	YES	Removed NFS quotas code for Solaris as Alan wants to re-write it. Jeremy. 
4368	NO	"This is a big  rather ugly patch. Whilst investigating the files not truncated when copying to a full disk problem  I discovered that we were not allowing the delete on close flag to be set properly  this led to other things  and after investigation of the proper delete on close semantics and their relationship to the file_share_delete flag I discovered there were some cases where we weren't doing the deny modes properly. And this after only 5 years working on them..... :-) :-). So here's the latest attempt. I realised the delete on close flag needs to be set across all smbds with a dev/ino pair open - in addition  the delete on close flag  allow share delete and delete access requested all need to be stored in the share mode tdb. The ""delete_on_close"" entry in the fsp struct is now redundant and should really be removed. This may also mean we can get rid of the ""iterate_fsp"" calls that I didn't like adding in the first place. Whilst doing this patch  I also discovered we needed to do the se_map_generic() call for file opens and POSIX ACL mapping  so I added that also. This code  although ugly  now passes the deny mode torture tests plus the delete on close tests I added. I do need to add one more multiple connection delete on close test to make sure I got the semantics exactly right  plus we should also (as Andrew suggested) move to random testing here.  The good news is that NT should now correctly delete the file on disk full error when copying to a disk :-).  Jeremy. "
4384	NO	Fix from Michael Davidson <md@sco.COM> to merge Solaris and UnixWare ACLs. Jeremy. 
4427	NO	As Andrew suggested  make smbrun return a fd for a deleted file which can then be read. Jeremy. 
4449	NO	hide unreadable patch from idra 
4455	NO	Removed mktemp from HEAD - same as done in 2.2. Jeremy. 
4458	NO	merge from 2.2 
4485	NO	merge some of the nsswitch code from tng to head the libnss_winbind.so from head now works with the winbindd from tng 
4493	YES	added much better snprintf code  plus new function asprintf 
4495	NO	Added Herb's comment fix. Jeremy. 
4508	YES	got asprintf defn right 
4510	YES	- added test for vasprintf - cleaned up GNUC printf attribute macros - added enum handling in mkproto - removed non-vararg code - made slprintf and vslprintf just macros for snprintf and vsnprintf - don't need slprintf code any more 
4519	NO	fixed comment-in-comment 
4561	NO	new mput code from idra that doesn't need a call to find 
4566	NO	merge some fixes from 2.2 
4637	YES	Fixed glibc crash problems with libnss_wins.so Jeremy. 
4643	YES	Broke out change trust account password routines into separate file since they're only used in one place anyway (timeout_processing() in process.c) 
4659	NO	Added stubs for SRVSVC and NETLOGON rpcclient commands. 
4667	NO	Added srvinfo and partial logonctrl and logonctrl2 commands. 
4669	YES	Fix for random stream generator. Jeremy. 
4683	NO	make swat recover from previously bad umask from xinetd 
4690	YES	Rename bzero -> memset. Check returns from *all* mallocs (including strdups). Jeremy. 
4735	NO	"lib/util_getent.c: removed debug code. smbd/posix_acls.c: Attempt to fix the ""lose default acl"" problem in Solaris. Needs testing. lib/sysacls.c: Typo fix. Jeremy. "
4761	NO	torture code is moving to its own directory 
4762	NO	moved all our torture code to a separate directory 
4777	YES	 Added STR_NOALIGN flags to clistr and srvstr fns. Yes  NT actually does send unaligned unicode strings sometimes! Fixed our handling of the workgroup name tacked on the end of the NT1 negprot response (a unaligned unicode) fixed a couple of places where we should be using the message_end fns instead of pre-calculated buffer lengths 
4845	YES	Insure caught the fact that PTRDIFFs were being done between two unrelated pointers. Jeremy. 
4870	YES	"The big character set handling changeover!  This commit gets rid of all our old codepage handling and replaces it with iconv. All internal strings in Samba are now in ""unix"" charset  which may be multi-byte. See internals.doc and my posting to samba-technical for a more complete explanation. "
4987	YES	Fixes for varargs problems with std c. Fix from Rick Lake <rwlake@anp.nl> for QNX. Jeremy. 
4993	NO	Pidfile check can be read-only. Removed old ifdef in password.c Jeremy. 
5000	YES	This is my 'Authentication Rewrite' version 1.01  mostly as submitted to samba-technical a few weeks ago.  The idea here is to standardize the checking of user names and passwords  thereby ensuring that all authtentications pass the same standards.  The interface currently implemented in as  nt_status = check_password(user_info  server_info)  where user_info contains (mostly) the authentication data  and server_info contains things like the user-id they got  and their resolved user name.  The current ugliness with the way the structures are created will be killed the next revision  when they will be created and malloced by creator functions.  This patch also includes the first implementation of NTLMv2 in HEAD  but which needs some more testing.  We also add a hack to allow plaintext passwords to be compared with smbpasswd  not the system password database.  Finally  this patch probably reintroduces the PAM accounts bug we had in 2.2.0  I'll fix that once this hits the tree.  (I've just finished testing it on a wide variety of platforms  so I want to get this patch in). 
5019	NO	Patch for having spaces in tdb keys  NULL termination fixes and other stuff.  From Andrew Esh <AEsh@tricord.com> 
5022	YES	Change all realloc() statements to Realloc() (ecxept for tdb.c) changed some code to exploit the fact that Realloc(NULL  size) == malloc(size) fixed some possible mem leaks  or seg faults.  thanks to andreas moroder (mallocs not checked in client/client.c  client/smbumount.c) 
5036	YES	"A rewrite of the error handling in the libsmb client code.  I've separated out the error handling into a bunch of separate functions rather than all being handled in one big function.  Fetch error codes from the last received packet:      void cli_dos_error(struct cli_state *cli  uint8 *eclass  uint32 *num);     uint32 cli_nt_error(struct cli_state *);  Convert errors to UNIX errno values:      int cli_errno_from_dos(uint8 eclass  uint32 num);     int cli_errno_from_nt(uint32 status);     int cli_errno(struct cli_state *cli);  Detect different kinds of errors:      BOOL cli_is_dos_error(struct cli_state *cli);     BOOL cli_is_nt_error(struct cli_state *cli);     BOOL cli_is_error(struct cli_state *cli);  This also means we now support CAP_STATUS32 as we can decode and understand NT errors instead of just DOS errors.  Yay!  Ported a whole bunch of files in libsmb to use this new API instead of the just the DOS error. "
5043	NO	Merge in the NT drivers changes from 2.2. Jeremy. 
5047	YES	This patch does a number of things  mostly smaller than they look :-)  In particuar  it moves the domain_client_validate stuff out of auth_domain.c to somwhere where they (I hope) they can be shared with winbind better.  (This may need some work)  The main purpose of this patch was however to improve some of the internal documentation and to correctly place become_root()/unbecome_root() calls within the code.  Finally this patch moves some more of auth.c into other files  auth_unix.c in this case.  Andrew Bartlett 
5049	YES	this is a big global fix for the ptr = Realloc(ptr  size) bug. many possible mem leaks  and segfaults fixed.  someone should port this fix to 2.2 also. 
5131	NO	fixed handling of 139/445 in clients 
5196	NO	Merge of transfer file code from 2.2  fix for readbraw. Jeremy. 
5204	YES	more warning fixes on solaris 
5226	NO	Converted to NTSTATUS return codes.  Started on producing smbpasswd output from user account information. Doesn't work yet.  Added -U option so samsync can be run interactively. 
5240	YES	replaced stdio in many parts of samba with a XFILE. XFILE is a cut-down replacemnt of stdio that doesn't suffer from the 8-bit filedescriptor limit that we hit with nasty consequences on some systems  I would eventually prefer us to have a configure test to see if we need to replace stdio  but for now this code needs to be tested widely so I'm enabling it by default. 
5242	NO	passdb/smbpassfile ain't needed any more - it only provided migration from an ancient file format  not relevant for Samba 3.0 
5247	NO	convert more code to use XFILE 
5293	YES	Fix (I hope) for a number of little compile warnings found by the IRIX compilers on the build farm.  Andrew Bartlett 
5299	YES	move to SAFE_FREE() 
5330	NO	smbmount fixes from Urban. Jeremy. 
5333	NO	fixed the error code handling in can_delete() by converting it to NTSTATUS. This gets the right error codes in SMBunlink 
5353	NO	added a little smbtorture test for dumping the unicode table of a server. This is just a framework right now - I want this to eventually replace the win32 test code from monyo  The interesting this about this test is that it shows up a really horrible performance bug in our stat cache code. I'll see if I can fix it. 
5368	YES	Make use of the pdb_set_plaintext_passwd() update to vastly simplify decode_pw_buffer() and the samr password changing routines.  And yes  I know that we can lost some information in the Unicode->UTF->Unicode bit of this  but its worth the code cleanup.  This also takes into account the possability of multibyte passwords.  Andrew Bartlett 
5374	NO	merge from 2.2 
5380	YES	Kill unused variables 
5392	NO	further devel and test kit. first tests show it still does not work. work in progress... 
5440	NO	initial kerberos/ADS/SPNEGO support in libsmb and smbclient. To activate you need to:  - install krb5 libraries - run configure - build smbclient - run kinit to get a TGT - run smbclient with the -k option to choose kerberos auth 
5450	NO	added NTLMSSP authentication to libsmb. It seems to work well so I have enabled it by default if the server supports it. Let me know if this breaks anything. Choose kerberos with the -k flag to smbclient  otherwise it will use SPNEGO/NTLMSSP/NTLM 
5455	YES	This file is really old and not used anymore. 
5467	NO	the next step in the intl changeover. This should get us compiling agian  and also completes the switch to lang_tdb.c. SWAT should now work with a po file in the lib/ directory  also removed useless SYSLOG defines in many files 
5470	NO	fixed typo 
5471	YES	removed unused gettext code 
5482	NO	added basic NTLMSSP support in smbd. This is still quite rough  and loses things like username mapping. I wanted to get this in then discuss it a bit to see how we want to split up the existing session setup code 
5484	NO	Now compiles under head branch.  Funny  I don't remember using libtool in the original Makefile... 
5534	YES	Replace getopt_long with popt for parsing commandline options 
5575	NO	Allow the logon level to be passed to cli_netlogon_sam_logon() rather than the validation level.  This allows us to test interactive or network logons.  Interestingly enough a win2k native mode server generates a rpc fault when presented with a network logon! 
5587	YES	This is a farily large patch (3300 lines) and reworks most of the AuthRewrite code.  In particular this assists tpot in some of his work  becouse it provides the connection between the authenticaion and the vuid generation.  Major Changes: 
5595	YES	Various post AuthRewrite cleanups  fixups and tidyups.  Zero out some of the plaintext passwords for paranoia  Fix up some of the other passdb backends with the change to *uid_t rather than uid_t.  Make some of the code in srv_netlog_nt.c clearer  is passing an array around  so pass its lenght in is definition  not as a seperate paramater.  Use sizeof() rather than magic numbers  it makes things easier to read.  Cope with a PAM authenticated user who is not in /etc/passwd - currently by saying NO_SUCH_USER  but this can change in future.  Andrew Bartlett 
5611	NO	a big one:  - old mangle code has gone  the new one based on tdb seem resonably ok    probably the valid.dat table need to be updated to treat wild chars as    invalid ones (work ok without it)  - a LOT of new string manipulation function for unicode  they are somewhat    tested but a review would not be bad  - some new function I will need for the new unix_convert function I'm writing     this will be renamed filename_convert and use only unicode strings.  - charconv  I attached a comment  if someone wnat to look if I'm right or    just was hacking to late in the night to make a sane one :)  of course any bug is my responsibility an will be pleased to see patches if you find any. :-)  Simo. 
5627	NO	Internationalization enbalement for net utility - replace printf with d_printf 
5633	YES	Added debug in truncate  fixed warning with gcc3. Jeremy. 
5640	NO	Removed #ifdef TDB_DEBUG around tdb_dump_all() and tdb_printfreelist() so that tdbtool can be compiled without having to make clean. 
5648	NO	Remove built-in support for clear-text kerberos authentication.  This should remove some confusion from the ./configure  but does not affect the 'real' kerberos support currently residing in smbd/sesssetup.c.  This code is vunerable to a spoofed KDC  and is best replaced by --with-pam and the pam_krb5 module.  This module includes measures to prevent such spoofing.  Andrew Bartlett 
5657	YES	Fixed allocation bug in database prog. Some format fixes. Jeremy. 
5658	NO	messed up with patches  this should be the right one  sorry 
5665	NO	verified two new win2k rpc's EnumPrinterDataEx() and DeletePrinterdataEx() 
5731	NO	Fix up libsmbclient in head.  Apply the patches from Tom Jansen  get rid of fprintfs and change them to DEBUGs  etc ... 
5758	NO	Removed TimeInit() call from every client program (except for one place in smbd/process.c where the timezone is reinitialised.  Was replaced with check for a static is_initialised boolean. 
5776	YES	This is another rather major change to the samba authenticaion subystem.  The particular aim is to modularized the interface - so that we can have arbitrary password back-ends.  This code adds one such back-end  a 'winbind' module to authenticate against the winbind_auth_crap functionality.  While fully-functional this code is mainly useful as a demonstration  because we don't get back the info3 as we would for direct ntdomain authentication.  This commit introduced the new 'auth methods' parameter  in the spirit of the 'auth order' discussed on the lists.  It is renamed because not all the methods may be consulted  even if previous methods fail - they may not have a suitable challenge for example.  Also  we have a 'local' authentication method  for old-style 'unix if plaintext  sam if encrypted' authentication and a 'guest' module to handle guest logins in a single place.  While this current design is not ideal  I feel that it does provide a better infrastructure than the current design  and can be built upon.  The following parameters have changed:  - use rhosts =    This has been replaced by the 'rhosts' authentication method   and can be specified like 'auth methods = guest rhosts'   - hosts equiv =    This needs both this parameter and an 'auth methods' entry   to be effective.  (auth methods = guest hostsequiv ....)   - plaintext to smbpasswd =    This is replaced by specifying 'sam' rather than 'local'   in the auth methods.  The security = parameter is unchanged  and now provides defaults for the 'auth methods' parameter.  The available auth methods are:  guest rhosts hostsequiv sam (passdb direct hash access) unix (PAM  crypt() etc) local (the combination of the above  based on encryption) smbserver (old security=server) ntdomain (old security=domain) winbind (use winbind to cache DC connections)   Assistance in testing  or the production of new and interesting authentication modules is always appreciated.  Andrew Bartlett 
5778	YES	rewrote net.c  The rewrite fixes a number of things:  - much better command line parsing - fixed usage of static and const - better finding of hosts - clean internal separation of sub-functions - expandable design 
5786	YES	use generate_random_str() 
5791	NO	Add a new torture test to extract a NT->DOS error map from an NT member of a samba domain.  The PDC must be running a special authenticaion module that spits out NT errors based on username.  Andrew Bartlett 
5807	NO	This compleats the of the authenticaion subystem into the new 'auth' subdirectory.  (The insertion of these files was done with some CVS backend magic  hence the lack of a commit message).  This also moves libsmb/domain_client_validate.c back into auth_domain.c  becouse we no longer share it with winbind.  Andrew Bartlett 
5809	YES	Fixed compiler warnings and dyn_CONFIGFILE related breakage. 
5877	NO	not used any more 
5888	NO	Updated definition of fstring.  print_asc(): Don't try to print a trailing NULL character print_key()  print_rec(): Display key in ASCII 
5891	YES	fixed the nsswitch initgroups code added a nsstest test program that directly tests all the nss interfaces using dlopen() 
5910	NO	Moved name_is_local to the correct place. Ooops. Jeremy. 
5914	NO	Some changes to the name resolution code in 'net' to allow us to find a PDC  as well as changes for correctness as per tridge.  Andrew Bartlett 
5924	YES	Better error handling:   - tdb_open api changed so that you now pass an error handling    callback when opening the file  so that errors detected during    opening have somewhere to go.  (All calls from the body of Samba to    this function go through a wrapper in tdbutil  which has been    updated.)   - Clean up logic for deciding how to open tdb.  Emit log messages if    something goes wrong (e.g. bad magic.)   - tdbtool now logs errors to stderr. 
5926	NO	undo 
5937	NO	Add a mechinism to allow for sane porting of rpcclient components into the new 'net' command.  This also gets us 'net rpc user add'.  Andrew Bartlett 
5966	YES	OK.  Smbpasswd -j is DEAD.  This moves the rest of the functionality into the 'net rpc join' code.  Futhermore  this moves that entire area over to the libsmb codebase  rather than the crufty old rpc_client stuff.  I have also fixed up the smbpasswd -a -m bug in the process.  We also have a new 'net rpc changetrustpw' that can be called from a cron-job to regularly change the trust account password  for sites that run winbind but not smbd.  With a little more work  we can kill rpc_client from smbd entirly! (It is mostly the domain auth stuff - which I can rework - and the spoolss stuff that sombody else will need to look over).  Andrew Bartlett 
5972	YES	added a propoer kerberos_kinit_password call contribution from remus@snapserver.com  thanks! 
5990	NO	better error checking in nsstest 
6004	NO	tdb_open_ex: Refactor to use a pointer to tdb  rather than an auto tdb  to be consistent with the rest of the code. 
6038	YES	"Converted wbinfo to use popt instead of getopt - popt is very nice!  Added a --set-auth-user function to set a username and password that can be used by winbindd when making connections to domain controllers.  This is necessary when restrictions have been placed on anonymous connections either through the RestrictAnonymous registry setting  or the win2k Local Security Policy -> Security Settings -> Local Policies -> Security Options -> Additional restrictions for anonymous connections.  (phew)  Two new keys are set in secrets.tdb: SECRETS/AUTH_USER and SECRETS/AUTH_PASSWORD which hold the username and plaintext password of the user to connect as.  To reset these values  run wbinfo --set-auth-user """" "
6043	YES	Tidyups to remove warnings on tdb standalone code. Jeremy. 
6056	NO	allow IRIX to build nsswitch/libnss_wins.so 
6111	NO	Fix for extra capabilities from Urban Widmark <urban@teststation.com>. Jeremy. 
6117	YES	Make TALLOC_CTX and talloc_chunk private to talloc.c.  Add a global singly-linked list of all active talloc pools  so that we can eventually show how much memory is used for different purposes. This also gives a check that pools are not being doubly freed.  talloc_init_named now handle a NULL name properly (ie does nothing)  Add accessor talloc_pool_name(). 
6179	YES	removed unused files 
6189	YES	Finally remove these files  which moved (by cvs backend magic) to source/auth at the start of the month. 
6194	NO	some merges from 2.2.  Still need to merge in changes from pdb_tdb.c but it will take more time as I don't want to loose any fixes that are only in HEAD. 
6207	NO	reverted to 1.24 and manually merged in changes from 2.2 
6217	YES	A farily large commit:   - Move rpc_client/cli_trust.c to smbd/change_trust_pw.c   - It hasn't been used by anything else since smbpasswd lost its -j   - Add a TALLOC_CTX to the auth subsytem.  These are only valid for the length    of the calls to the individual modules  if you want a longer context hide it    in your private data.     Similarly  all returns (like the server_info) should still be malloced.   - Move the 'ntdomain' module (security=domain in oldspeak) over to use the new    libsmb domain logon code.  Also rework much of the code to use some better    helper functions for the connection - getting us much better error returns    (the new code is NTSTATUS).     The only remaining thing to do is to figure out if tpot's 0xdead 0xbeef for    the LUID feilds is sufficient  or if we should do random LUIDs as per the old    code.     Similarly  I'll move winbind over to this when I get a chance.  This leaves the SPOOLSS code and some cli_pipe code as the only stuff still in rpc_client  at least as far as smbd is concerned.  While I've given this a basic rundown  any testing is as always appriciated.  Andrew Bartlett 
6220	NO	Now that winbind doesn't rely on this  we may as well remove it...  Andrew Bartlett 
6270	YES	Don't use static memory  malloc it... Jeremy. 
6281	YES	I've decided to move the auth code around a bit more...  The auth_authsupplied_info typedef is now just a plain struct - auth_context  but it has been modified to contain the function pointers to the rest of the auth subsystem's components.  (Who needs non-static functions anyway?)  In working all this mess out  I fixed a number of memory leaks and moved the entire auth subsystem over to talloc().  Note that the TALLOC_CTX attached to the auth_context can be rather long-lived  it is provided for things that are intended to live as long.  (The global_negprot_auth_context lasts the whole life of the smbd).  I've also adjusted a few things in auth_domain.c  mainly passing the domain as a paramater to a few functions instead of looking up lp_workgroup().  I'm hopign to make this entire thing a bit more trusted domains (as PDC) freindly in the near future.  Other than that  I moved a bit of the code around  hence the rather messy diff.  Andrew Bartlett 
6296	YES	Don't log the password in pam_sm_authenticate() unless DEBUG_PASSWORD is defined.  This is done with --enable-developer mode. 
6363	NO	I'm doing some things towards the NamedPipes game with lckl and he has asked me to move this from being a static to matching its mate in lib/util_sock.c.  In any case  this should discorage anybody from using the 'wrong' version of this function.  (ie the one from TNG  which needs a bit more error checking depending on use).  Andrew Bartlett 
6381	NO	Split pstring definitions into their own header. 
6385	NO	Fix from 2.2.  It didn't break on HEAD because it isn't being compiled.  Herb? 
6390	NO	"Roll back PSTRING_SANCTIFY patch; just leave non-controversial type and constness changes. "
6426	YES	Kill off another ugly wart from the side of the passdb subsystem.  This time its the pdb_getsampwuid() function - which was only being used by the SAMR rpc subsystem to gain a 'user session key'.  This 'user session key' is actually generated at login time  and the other changes here simply move that data around.  This also means that (when I check some details) we will be able to use the user session key  even when we are not actually the DC  becouse its one of the components of the info3 struct returned on logon.  Andrew Bartlett 
6427	YES	This is another *BIG* change...  Samba now features a pluggable passdb interface  along the same lines as the one in use in the auth subsystem.  In this case  only one backend may be active at a time by the 'normal' interface  and only one backend per passdb_context is permitted outside that.  This pluggable interface is designed to allow any number of passdb backends to be compiled in  with the selection at runtime.  The 'passdb backend' paramater has been created (and documented!) to support this.  As such  configure has been modfied to allow (for example) --with-ldap and the old smbpasswd to be selected at the same time.  This patch also introduces two new backends:  smbpasswd_nua and tdbsam_nua. These two backends accept 'non unix accounts'  where the user does *not* exist in /etc/passwd.  These accounts' don't have UIDs in the unix sense  but to avoid conflicts in the algroitmic mapping of RIDs  they use the values specified in the 'non unix account range' paramter - in the same way as the winbind ranges are specifed.  While I was at it  I cleaned up some of the code in pdb_tdb (code copied directly from smbpasswd and not really considered properly).  Most of this was to do with % macro expansion on stored data.  It isn't easy to get the macros into the tdb  and the first password change will 'expand' them.  tdbsam needs to use a similar system to pdb_ldap in this regard.  This patch only makes minor adjustments to pdb_nisplus and pdb_ldap  becouse I don't have the test facilities for these.  I plan to incoroprate at least pdb_ldap into this scheme after consultation with Jerry.  Each (converted) passdb module now no longer has any 'static' variables  and only exports 1 init function outside its .c file.  The non-unix-account support in this patch has been proven!  It is now possible to join a win2k machine to a Samba PDC without an account in /etc/passwd!  Other changes:  Minor interface adjustments: pdb_delete_sam_account() now takes a SAM_ACCOUNT  not a char*.  pdb_update_sam_account() no longer takes the 'override' argument that was being ignored so often (every other passdb backend).  Extra checks have been added in some places.  Minor code changes: smbpasswd no longer attempts to initialise the passdb at startup  this is now done on first use.  pdbedit has lost some of its 'machine account' logic  as this behaviour is now controlled by the passdb subsystem directly.  The samr subsystem no longer calls 'local password change'  but does the pdb interactions directly.  This allow the ACB_ flags specifed to be transferred direct to the backend  without interference.  Doco:  I've updated the doco to reflect some of the changes  and removed some paramters no longer applicable to HEAD. 
6506	NO	Some more 'winbind default domain' support patches from Alexander Bokovoy <a.bokovoy@sam-solutions.net>.  This patch is designed to remove the 'special cases' required for this support.  In particular this now kills off winbind_initgroups  as it appears no longer to be required.  Andrew Bartlett 
6547	NO	rewrote smbtorture to use the new dbench 2 format and methods 
6568	NO	talloc'ify ads modify functions.  Also add more complete berval support. 
6652	NO	This patch merges my private LDAP tree into HEAD.  The main change here is to move ldap into the new pluggable passdb subsystem and to take the LDAP location as a 'location' paramter on the 'passdb backend' line in the smb.conf.  This is an LDAP URL  parsed by OpenLDAP where supported  and by hand where it isn't.  It also adds the ldap user suffix and ldap machine suffix smb.conf options  so that machines added to the LDAP dir don't get mixed in with people.  Non-unix account support is also added.  This means that machines don't need to be in /etc/passwd or in nss_ldap's scope.  This code has stood up well under my production environment  so it relitivly well tested.  I'm commiting this now becouse others have shown interest in using it  and there is no point 'hording' the code :-).  Andrew Bartlett 
6674	NO	fixed NBENCH code for NT4 server ntcreatex semantics 
6695	YES	Convert rpcclient to use popt instead of getopt.  Includes changing of got_pass from BOOL to int.  Also includes long option names...anyone want those different before I update the doc?  Please try this out.  I've tried to test all the flags  but the more times we kick the tires... 
6711	NO	rewrote the machine sid storage code to store the SID in secrets.tdb rather than MACHINE.SID. We try to load MACHINE.SID only if we can't fetch the SID from secrets.tdb  This also fixes the value of global_sam_sid for the DC/non-DC case 
6713	NO	prevent bogus compiler complaints about comments in comments 
6733	NO	Another program converted to popt...smbstatus this time. 
6737	NO	Added POSIX ACL layer into the vfs. Jeremy. 
6765	NO	syncing up printing code with SAMBA_2_2 (already done some merges in the reverse).    * add in new printer change notify code from SAMBA_2_2    * add in se_map_standard() from 2.2 in _spoolss_open_printer_ex()    * sync up the _print_queue_struct in smb.h (why did someone change the     user/file names in fs_user/fs_file (or vice-versa) ? )    * sync up some cli_spoolss_XXX functions 
6841	NO	Forgot torture hacks... Jeremy. 
6892	NO	merge winbindd WINS changes from 2.2 
6898	NO	merge from 2.2 - allow -c option to specify smb.conf file 
6900	NO	reverted Herbs smbpasswd commit as it completely broke setting a password 
6903	NO	readd -c config file change from 2.2 - works with -L mode now as well. 
6909	YES	removing unused files.... 
6956	NO	Reintroduce the 2.2 name mangling code  until we get are more flexible solution.  Even for a hash/cache setup  this code needs some more work  in particular it needs to use mangle_get_prefix() etc and to move to unicode internals.  Andrew Bartlett 
6983	NO	"This split the mangling code up to allow for the possibility of multiple mangling implementation  selectable using ""mangling method = "" in smb.conf  It also tidies the interface a little  although it is still nasty. "
6996	YES	don't try to return a void 
7009	NO	This is the 'multiple pdb backends' patch from ctrlsoft  aka Jelmer Vernooij <jelmer@nl.linux.org>.  This patch also includes major rework of pdbedit to use popt  and the addition of -i paramter (allowing the user to specify which PDBs is being operated on) and -e to export a pdb - useful for backup and testing etc.  Use of -i and -e gets us pdb2pdb functionality for transition between backends  much like the sam2sam in TNG.  Andrew Bartlett 
7030	NO	Partly based on the work by mimir (Rafal Szczesniak <mimir@diament.ists.pwr.wroc.pl>) this patch allows samba to correctly enumerate its trusted domains - by exaimining the keys in the secrets.tdb file.  This patch has been tested with both NT4 and rpcclient/wbinfo  and adds some extra functionality to talloc and rpc_parse to allow it to deal with already unicode strings.  Finally  this cleans up some const warnings that were in net_rpc.c by pushing another dash of const into the rpc client code.  Andrew Bartlett 
7058	NO	"Fix incorrect zpadlen handling in fmtfp. Thanks to Ollie Oldham <ollie.oldham@metro-optix.com> for spotting it. few mods to make it easier to compile the tests. addedd the ""Ollie"" test to the floating point ones. "
7067	NO	 Fix smbtorture so it can handle collisions etc ... 
7073	NO	fixed the fallback to a BDC for ADS connections 
7076	NO	First cut at fix for the EINTR problem... More needs to be done I think. Jeremy. 
7081	YES	Added sys_fcntl (not to be used everywhere). Added sys_read/sys_write for transfer_file. Jeremy. 
7087	NO	Added Martin's lpq parse fixes from 2.2. Jeremy. 
7091	YES	My seven-year-old daughter calls me 'Captain Pedantic'.  I don't know which is freakier... the name or the fact that a seven-year-old knows what it means.  Small change to correct the value we place in the DGM_LENGTH field of NBT Datagram messages.  We have been counting the full datagram  but it's fairly clear in the RFCs that we should only count the source name  destination name  and payload.  We've been overcharging by 14 bytes (the size of the NBT DGM header).  This fix brings us in line with what Windows does  and what the RFCs say should be done.  I'm a little surprised that this didn't cause any bugs or error messages.  I guess no one actually checks this field. 
7106	YES	move to the FNV1 hash alghorithm seem good the test revealed 15 collision with 1 Million long file names :-)  Simo. 
7112	NO	this code has been sitting on one of my box for 3 months. add wins push replication  better handling of partners  rewrote half of parser.  I know some parser code need to be changed to better cope with multihomed machine and groups.  
7119	NO	fixed tdbtool from core dumping. But the braces to make Chris happy !  
7148	NO	We were mapping the open of name1/name2 where name1 wasn't a directory (ie. ENOTDIR) to the NT status code NT_STATUS_NOT_A_DIRECTORY. NT seems to use NT_STATUS_OBJECT_PATH_NOT_FOUND. I'm hoping this will fix the access binaries served from a Samba share bug... Jeremy. 
7153	NO	Converged help on net group command. 
7167	NO	move vsyslog() from snprintf.c to replace.c tx Elrond for prosecuting cleanness :) 
7202	NO	Added ability to lookup ldap server  kdc  dc  and master browser.  Please review especially the methods for finding kdc and ldap server when they're not specified.  This is a first attempt... 
7227	NO	Get the sco boxes compiling again - use the sys_ intefaces for all the dl* funcitons. 
7229	NO	This removes --with-ssl from Samba.  This option was badly maintained  useless and confused our users and distirbutors.  (its SSL  therfore it must be good...)  No windows client uses this protocol without help from an SSL tunnel.  I can't see any reason why setting up a unix-side SSL wrapper would be any more difficult than the > 10 config options this mess added to samba in any case.  On the Samba client end  I think the LIBSMB_PROG hack should be sufficient to start stunnel on the unix side.  We might extend this to take %i and %p (IP and port) if there is demand.  Andrew Bartlett 
7237	NO	Fix usage of va_list passed as an arg.  Use __va_copy before using it when it exists. 
7240	YES	A few things in this commit:  cleanup some of the code in net_rpc_join re const warnings and fstrings.  Passdb:  Make the %u and %U substituions in passdb work. This is done by declaring these paramters to be 'const' and doing the substitution manually.  I'm told this is us going full circle  but I can't really see a better way.  Finally these things actually seem to work properly...  Make the lanman code use the pdb's recorded values for homedir etc rather than the values from lp_*()  Add code to set the plaintext password in the passdb  where it can decide how to store/set it.  For use with a future 'ldap password change' option  or somthing like that...  Add pdb_unix  so as to remove the 'not in passdb' special cases from the local_lookup_*() code.  Quite small  as it uses the new 'struct passwd -> SAM_ACCOUNT' code that is now in just one place.  (also used by pdb_smbpasswd)  Other: Fix up the adding of [homes] at session setup time to actually pass the right string  that is the unix homedir  not the UNC path.  Fix up [homes] so that for winbind users is picks the correct name. (bad interactions with the default domain code previously)  Change the rpc_server/srv_lsa_nt.c code to match NT when for the SATUS_NONE_MAPPED reply:  This was only being triggered on no queries  now it is on the 'no mappings' (ie all mappings failed). Checked against Win2k.  Policy Question:  Should SID -> unix_user.234/unix_group.364 be considered a mapping or not?  Currently it isn't.  Andrew Bartlett 
7248	YES	Remove unused files.  The size of samba going down for once :-)  Andrew Bartlett 
7249	NO	"so here it is the code to introduce seriously debugggging classes. this is a first step only passdb stuff has beein ""classized"".   - so what can you do?    set debug level to:  1 poasdb:10    that will make all the code run at debug level 1 except the code in    passdb/* files that will run at level 10    TODO: fix the man page   - also smbcontrol has this nice feature so smbcontrol smbd debug 3 passdb:5    will set every smbd to have a default log level of 3 while passdb stuff    will be at level 5     and so no..    minor cosmetic fix to pdbedit is there too "
7267	NO	debug classized 
7279	NO	Cleanups!  Make some code static  add some const to the PAM code  and make the plaintext password code actually function - particulary without the requirement to modify the 'struct passwd' (which it assumed was made up of fstrings)  This kills some particularly ugly code in lib/util_pw.c  Andrew Bartlett 
7287	NO	Given Jeremy's positive response  and a lack of one from tpot  I'll commit this:  More code cleanup - this lot a bit more dodgy than the last:  The aim is to trim pwd_cache down to size.  Its overly complex  and a pain to deal with.  With a header comment like this:  'obfusticaion is planned'  I think it deserved to die (at least partly).  This was being done to allow 'cli_establish_connection' to die - its functionality has been replaced by cli_full_connection()  which does not duplicate code everywhere for creating names etc.  This also removes the little 'init' fucntions for the various pipes  becouse they were only used in one place  and even then it was dodgy.  (I've reworked smbcacls not to use anonymous connections any more  as this will (should) fail with a 'restrict anonymous' PDC).  This allowed me to remove cli_pipe_util.c  which was calling cli_establish_connection.  tpot:  I'm not sure what direction you were going with the client stuff  and you may well have been wanting the init functions.  If thats the case  give me a yell and I'll reimplement them against cli_full_connection.  Andrew Bartlett 
7289	YES	This function is unused  and doesn't make any sense to me anyway.  Wasn't this what got us some of the bugs with big-endien smbpasswd -j FOO -U ?  Anyway  it deserves to die.  Andrew Bartlett 
7307	NO	Update some of the LM hash code to better respect the seperation between unix and DOS strings.  This pushes all the 'have to uppercase  must be 14 chars' stuff behind the the interface.  Andrew Bartlett 
7337	NO	merge from 2.2 
7373	NO	Move session gathering routine back into session.c so it can be called either in RAP or RPC environment. 
7388	NO	merge from 2.2 
7417	YES	Patch (from ctrlsoft <jelmer@nl.linux.org>) to poptify testparm  and the modifications required to suppress the const warnings.  Andrew Bartlett 
7446	NO	 more debug classess activated 
7474	NO	fixed a bug in handling select in the main daemon - this stops the daemon spinning if a signal is received at an inconvenient moment 
7485	NO	- completely rewrote the wins_srv.c code. It is now much simpler  and gives us a good grounding to properly support multiple wins servers for different interfaces (which will be coming soon ...)  - fixed our wins registration failover code to actually do 
7499	YES	The next phase in the WINS rewrite!  We now cope wiith multiple WINS groups and multiple failover servers for release and refresh as well as registration. We also do the regitrations in the same fashion as W2K does  where we don't try to register the next IP in the list for a name until the WINS server has acked the previos IP. This prevents us flooding the WINS server and also seems to make for much more reliable multi-homed registration.  I also changed the dead WINS server code to mark pairs of IPs dead  not individual IPs. The idea is that a WINS server might be dead from the point of view of one of our interfaces  but not another  so we need to keep talking to it on one while moving onto a failover WINS server on the other interface. This copes much better with partial LAN outages and weird routing tables. 
7502	NO	Proper merge of all the working printing stuff from APPLIANCE_HEAD. Now let's keep this in sync ! Jeremy. 
7519	YES	used findstatic.pl to make some variables static and remove some dead code 
7576	NO	 Commit Tom Jansen's changes to head. 
7602	YES	after thinking about the env variable hack for avoiding group membership enumeration I realised it could be a security hole for setuid progs.  This adds a proper nss function instead. 
7611	NO	splitting off storage/retrieval routines for abstracting the registry view front end.  Now to plug in the various hooks. 
7621	NO	virtual registry framework with initial printing hooks. 
7632	NO	* refactored registry operations some.  subkey lists and   registry values are now passed around in containers   (REGSUBKEY_CTR & REGVAL_CTR) which each possess a TALLOC_CTX.  * removed subkey_specific_fn() from REGISTRY_OPS.  Is implemented   in the form of a wrapper  * temporarily broke the printing registry ops.  * implemented inheritence for the data_p of nodes in a SORTED_TREE  * All REGISTRY_KEY instances now store a valid REGISTRY_HOOK since   the default REGOSTRY_OPS structure is stored in the root of the   cache_tree.  * Probably some other change I forgot....  T 
7663	NO	More cleanups  and add a comment/hint not to clean somthing up in future :-)  Andrew Bartlett 
7714	NO	Started to get samsync to insert account information in the passdb.  It's pretty half-arsed at the moment and doesn't work very well but Mr Bartlett was interested in it.  Also started playing around with the more interesting bits of popt.  The auto-generated usage information is pretty neat. 
7732	NO	 OK! Finally the cascaded VFS patch is in. Testing is very welcome  specially with layered multiple vfs modules. A big thank to Alexander Bokovoy for his work and patience :)  Simo. 
7762	NO	Moved rpc client routines from libsmb back to rpc_client where they belong. 
7768	YES	 passwords where not checked (you cannot check if the same buffer differs from itself). they where alo not clean after use!  Simo. 
7849	NO	nicer locking timeout test 
7880	NO	 pdb_nisplus converted to the new passdb system API's 
7916	NO	 typos typos :) 
7941	YES	Try to support non-root-mode systems without getgrouplist().  Andrew Bartlett 
7942	YES	Updates!  - Don't print an uninitialised buffer in service.c - Change some charcnv.c functions to take smb_ucs2_t ** instead of void ** - Update NTLMv2 code to use dynamic buffers - Update experimental SMB signing code - still more work to do - Move sys_getgrouplist() to SAFE_FREE() and do a DEBUG() on initgroups()   failure.  Andrew Bartlett 
7955	NO	 avoid using libtool for VFS modules change a name in block.c it was hiding a function name add a comment in configure 
8060	NO	Merge of (apparently working :-) new printing notify code. Jeremy. 
8091	NO	 the current block module is completely broken  jelmer will commit a new one later. simo 
8101	NO	 Patch from Stefan (metze) Metzmacher with more updates for the SAM subsystem 
8173	NO	printjob merge from APP_HEAD regarding device modes 
8181	NO	" Move functionality to check whether entries for lp_workgroup() and ""BUILTIN"" exist and add them if necessary from check_correct_backend_entries into sam_context_check_default_backends. The reason for this is that we don't always want to have BUILTIN and lp_workgroup() in a sam_context  for example when doing sam2sam. check_correct_backend_entries has been renamed to 'check_duplicate_backend_entries' since that's what it currently does.  The sam_context_check_default_backends() function is only called by sam_get_static_context(BOOL reload) currently currently. "
8185	NO	 Add framework for samtest commands 
8341	YES	Change to use sys_read/sys_write. Jeremy. 
8434	YES	 Convert to popt 
8446	YES	 Convert to popt. Removed -o and -a options - these have been broken since 2.2 without complaints from users 
8452	NO	 The fixes from Tom plus a minor update from me. 
8462	NO	 Move testsmbc.c to examples 
8477	NO	 Move pdb_xml to source/ 
8533	NO	 consolidate error mapping functions into a single file 
8543	YES	 Fix segfault with high debug levels 
8549	NO	Removed global_myworkgroup  global_myname  global_myscope. Added liberal dashes of const. This is a rather large check-in  some things may break. It does compile though :-). Jeremy. 
8553	NO	 Move working VFS modules to source/modules/ 
8558	NO	 Move 'weird' character set into new 'developer' module 
8564	NO	 Add smb_register_passdb() 
8565	YES	 Use smb_register_passdb() - plus some small fixes 
8574	NO	 Fix some problems with tree.c reported by users. 
8579	NO	Next step of printer publishing. net ads printer publish <printername> [servername] Will retreive the DsSpooler and DsDriver info by rpc for a remote server then publish it.  Next comes doing it within smbd 
8593	NO	Add support for new 'F' format  which is a string in the default codepage. 
8601	NO	a working timegm() function for systems that don't have it 
8614	NO	After consultation with tpot  remove the 'winbind_domain' environment variable hack  the feild on the pipe  and the server-side.  It only controlled some enum operations in any case.  This is to try and have less 'magic' environment variables.  Andrew Bartlett 
8618	NO	Remove use of 'F' - make 'f' and 'p' do unix (iso8859-1) encoding. Jeremy. 
8646	NO	"[merge] remove assert(count ==1) for multi-homed PDCs; CR 1277 "
8655	NO	"The element in fsp->print_job should be a RAP jobid  not a uint32 RPC jobid. This was causing Win9x client ""set name"" calls to fail. Still need one cleanup fix to finish. Jeremy. "
8667	NO	 Commit some more changes ... Start processing the sub-keys  recursively. 
8668	NO	 Add some more handling of Key records ... 
8670	YES	 Start allocating structures to keep the in memory copy of the registry tree in. Don't yet handle the SK records (security descriptors)  but will soon.  It still compiles on Linux  but I am still not King. 
8671	NO	 Handle the creation of more parts of the tree ... Still have to do SK records and the data parts of the VK records.  Also have to code up routines that can iterate across keys and values  as well as return values associated with a particular key  etc. 
8676	YES	 Clean up the code some more. Create more elements of the tree. Security Descriptors/Keys not yet processed. Make debugging printfs only occur if verbose is set. Create an iterator for the registry key. Still not King. Bother! 
8679	NO	 Tidy up some bits. We can now at least list all the keys.  More work to do on the iterators and access functions.  Still not King. Stinks really. 
8697	NO	 More code to read in and create security descriptor entries ... 
8701	YES	 We now read in the whole of the registry  including security bits.  Still have to make sure that the datastructure is correct  though.  Then on to writing it out and editing/changing keys  values and sec_descriptors 
8732	NO	BIG patch...  This patch makes Samba compile cleanly with -Wwrite-strings.  - That is  all string literals are marked as 'const'.  These strings are always read only  this just marks them as such for passing to other functions.  What is most supprising is that I didn't need to change more than a few lines of code (all in 'net'  which got a small cleanup of net.h and extern variables).  The rest is just adding a lot of 'const'.  As far as I can tell  I have not added any new warnings - apart from making all of tdbutil.c's function const (so they warn for adding that const string to struct).  Andrew Bartlett 
8755	YES	this makes it compile  but I'm not sure if it is correct. Are we really testing a pointer value to be equal to 0x19 ??? 
8761	NO	 Some fixes to editreg. Clientgen should not be touched  and an update to configure that Herb needs. 
8898	NO	We now have client-side SMB signing support!  This checking allows us to connect to Microsoft servers the use SMB signing  within a few restrictions:   - I've not get the NTLMSSP stuff going - it appears to work  but if you break the sig - say by writing a zero in it - it still passes...  - We don't currently verfiy the server's reply  - It works against one of my test servers  but not the other...  However  it provides an excellent basis to work from.  Enable it with 'client signing' in your smb.conf.  Doc to come (tomorrow) and this is not for 3.0  till we get it complete.  The CIFS Spec is misleading - the session key (for NTLMv1 at least) is the standard session key  ie MD4(NT#).  Thanks to jra for the early work on this.  Andrew Bartlett 
8925	NO	Samba janitor: adding mbp's umask patch :-). Jeremy. 
8926	NO	Samba janitors: applying mbp's redundant umask fix. Jeremy. 
8970	NO	 Remove obsolete file lib/netatalk.c - We have a VFS module now 
8975	NO	 Recover much of my changes to editreg.c. Add some const and start coding the regedit file parser etc. 
9032	NO	 Remove obsolete files 
9035	NO	"From aliguori@us.ibm.com: This patch adds the architecture for an IDMAP backend system including a new smb.conf parameter ""winbind backend"".  Right now  the only valid value is ""tdb"" but I'm currently working on an LDAP backend. "
9061	NO	 move genparser to use talloc contexts instead of [m|c|re]alloc() and free()s 
9074	YES	Move off-by-one buggy malloc()/safe_strcpy() combination to strdup() instead.  Andrew Bartlett 
9103	NO	Add a comment about the meaning of samba's internal character set and how this interacts with it. 
9105	NO	"Doxygen janitor: check_domain_match parameter is spelled ""auth_context"". "
9114	YES	the new DEVELOPER checks for string overflows have (as expected) broken a lot of stuff. These two macros are meant to make life easier when fixing these bugs. I'm guessing we will see more macros like this (eg. fstrcpy_base) 
9118	YES	Fixes to the vfs_fake_perms modules - we only need to specify the VFS functions that we actually modify.  Also a better implementation of the stat() and fstat() functions.  Andrew Bartlett 
9146	NO	 Some progress towards gums and tdbsam2 genparser works fine  and it is a marvelous tool to store objects in tdb :) 
9154	YES	Make it clear that this is a fstrcpy(). 
9160	NO	Change the way we sign SMB packets  to a function pointer interface.  The intention is to allow for NTLMSSP and kerberos signing of packets  but for now it's just what I call 'simple' signing. (aka SMB signing per the SNIA spec)  Andrew Bartlett 
9177	YES	Remove valgrind_strlen function  hopefully no longer needed with recent Valgrind relases and clashing with -DVALGRIND. 
9189	NO	Add const 
9202	NO	/tmp/newfun.msg 
9213	NO	client-side smbpasswd fixes - use pstrcpy_base to avoid clobber_region bugs  Andrew Bartlett 
9218	NO	Truncate the machinename manually  so as not to generate level 0 debugs for an expected situation.  Andrew Bartlett 
9220	YES	String handling parinoia fixes.  This patch enables the compile-time checking of strings assable by means of sizeof().  (Original code had the configure check reversed).  This is extended to all safe_strcpy() users  push_string and pull_string  as well as the cli and srv derivitives.  There is an attempt to cap strings at the end of the cli buffer  and clobber_region() of the speified length (when not -1 :-).  Becouse of the way they are declared  the 'overmalloc a string' users of safe_strcpy() have been changed to use overmalloc_safe_strcpy() (which skips some of the checks).  This whole ball of mud worked fine  until I pulled out my 'fix' for our statcache.  When jeremy fixes that  we should be able to get back to testing this stuff.  This patch also includes a 'marker' of the last caller to clobber_region (ie  the function that called pstrcpy() that called clobber_region) to assist in debugging problems that may have smashed the stack.  This is printed at smb_panic() time.  (Original idea and patch by metze).  It also removes some unsused functions  and #if 0's some others that are unused but probably should be used in the near future.  For now  this patch gives us some confidence on one class of trivial parsing error in our code.  Andrew Bartlett 
9234	YES	 - Make ReadDirName return a const char*.   - Consequential changes from that   - mark our fstring/pstring assumptions in function prototypes  Andrew Bartlett 
9265	YES	GCC 3.x has deprecated multi-line string constants. 
9277	YES	 Make swat use popt 
9278	YES	 Convert smbcacls to popt 
9288	NO	 Add more mappings to the nterr->errno mapping table. It should be fairly complete now. 
9308	YES	 Convert to popt 
9311	NO	 Fix typo in comment 
9313	YES	 We don't need optarg when we have popt 
9314	NO	 Don't declare variables after instructions 
9324	YES	 Convert to popt. 
9327	NO	 Patch from metze to generalise POPT_COMMON_SAMBA  with some minor changes 
9328	NO	 Fix init function name and return value 
9355	NO	 Use the new modules system in VFS. If a module can't be loaded with the new modules system  we still fall back to the old system. 
9366	NO	 Fix some uncleanness with testsmbc.c 
9383	NO	Cleanup of winbind client side code.  Mostly this consists of untangling the existing code and moving it in to operating system specific files.  The winbind client code for all supported operating systems is now in nsswitch/winbind_nss_OSNAME.[ch] to make things a bit clearer. 
9411	NO	"The ldap idmap backend from Anthony Liguori (aliguori@us.ibm.com):  This patch moves the ldap routines out of passdb into a generic library and implements an LDAP backend for IDMAP.  THe backend can be enabled with ""idmap backend = ldap"" in smb.conf.  THere are also schema changes to make sure to update teh ldap schema files. "
9420	NO	This is a merge of the NETLOGON schannel server code from Samba TNG. Actually  it exists in the main Samba cvs tree in APPLIANCE_TNG as I found out later :-)  It adds a new parameter: server schannel = yes/auto/no defaulting to auto.  What does this mean to the user: No requireSignOrSeal registry patch for XP anymore.  Many thanks for this code to Luke Leighton  Elrond and anybody else I forgot to mention.  My next thing will be to see if this applies cleanly to 3_0.  Please test and comment!  Volker 
9430	NO	don't rely on realloc() working on NULL 
9448	NO	 BUGS.txt -> Bugs Appendix in HOWTO collection 
9463	NO	Rewrite of smbcontrol - it was a bit of a mess.  It should now be much nicer to use and more hackable.   - converted to popt   - text message destinations (except for broadcast smbd) are resolved    using files in piddir so the string 'winbindd' is now a destination   - added --timeout option to specify timeout value   - deleted complicated handling of debug args as separate command line    arguments: use shell quoting instead   - deleted interactive mode as punishment for using strtok() (-:   - much improved command line argument checking  Some of this stuff was broken before I started (print notify  profiling) but the basics still work (ping  pool-usage  debug  debuglevel). 
9466	NO	Put the core schannel functions to parse_prs.c. They are also used by schannel clients.  Volker 
9488	YES	" strncat get sometimes optimized to strcat by glibc and that triggers our ""don't use strcat"" define  reworked to snprintf "
9491	YES	Multi-line string constants have been deprecated in newer versions of gcc. Found by Guenther Deschner. 
9492	NO	Doc.  Add additional test case for a bug recently found in rsync by Paul Green.  Appparently it was fixed here a while ago. 
9499	YES	Removed unused variable. 
9515	NO	Store the type of 'sec channel' that we establish to the DC.  If we are a workstation  we have to use the workstation type  if we have a BDC account  we must use the BDC type - even if we are pretending to be a workstation at the moment.  Also actually store and retreive the last change time  so we can do periodic password changes again (for RPC at least).  And finally  a couple of minor fixes to 'net'.  Andrew Bartlett 
9526	NO	 Updates to editreg.c to provide more functionality ...  Hopefully more coming ... 
9594	NO	Move pdb_mysql and pdb_xml from modules/ to passdb/  just like they are in 3_0 
9610	NO	 make winbind use idmap as well. change idmap_init call  removed ldap backend for winbind idmap  seem it had problems anyway and it have to be reworked to work with idmap without calling winbind code.  simo 
9616	NO	Update for the new modules system. Also  use Makefile rather then Makefile.in because we don't generate Makefile from configure anymore. 
9626	NO	Typo in error message  Volker 
9649	NO	Refactor existing sock_exec() and socketpair_tcp() functions into their own source file. I will be making changes to sock_exec to work on VOS  which has a blocking connect() call  but first I want to get it in its own source file so that it can be called from a test program. 
9691	NO	Patch from metze and me that adds dummy smb_register_*() functions 
9781	NO	trying to get HEAD building again.  If you want the code prior to this merge  checkout HEAD_PRE_3_0_0_BETA_3_MERGE 
9790	NO	 port latest changes from SAMBA_3_0 tree 
9805	NO	syncing files 
9806	NO	sync 3.0 into HEAD for the last time 
9807	YES	removing unused files 
9811	YES	Remove another dead file. 
9812	YES	Remove obsolete files. 
9857	NO	Merge from 3.0:  >Fix to parse the level-2 strings. From Anthony Liguori aliguor@us.ibm.com. >Jeremy. 
9874	YES	 split some security related functions in their own files. (no need to include all of smbd files to use some basic sec functions)  also minor compile fixes 
9896	NO	 So here it is a non-intrusive patch with my latest work on gums (the laternative to the current passdb). Currently it is run through a comatibility module in the passdb layer  with a subset of the functionality it may provide. It is still work in progress  but as someone asked me about it  and as it should make no difference to the normal code  I tought it was a good idea to put it into. It adds a dependency on perl. I know it is not very nice  but I'm sure we will work out a solution for that.  As always blame me if I break something  but try to fix yourself  as I am busy-busy-busy :-)  Simo. 
9899	YES	Enclose usage of st_blksize and st_blocks struct stat members in #ifdef HAVE_STAT_ST_BLKSIZE and #ifdef HAVE_STAT_ST_BLOCKS  respectively.  Fixes bug 550 reported by Joachim Schmitz <schmitz@hp.com>. 
9919	NO	Merge tridge's tdb updates. Jeremy. 
9932	NO	Merge tridge's AIX fixes. Jeremy. 
9981	YES	Fix coredump in cli_get_backup_list. Jeremy. 
10031	YES	(merge from 3.0)  Changes all over the shop  but all towards:  - NTLM2 support in the server  - KEY_EXCH support in the server  - variable length session keys.  In detail:   - NTLM2 is an extension of NTLMv1  that is compatible with existing domain controllers (unlike NTLMv2  which requires a DC upgrade).   * This is known as 'NTLMv2 session security' *  (This is not yet implemented on the RPC pipes however  so there may well still be issues for PDC setups  particuarly around password changes.  We do not fully understand the sign/seal implications of NTLM2 on RPC pipes.)  This requires modifications to our authentication subsystem  as we must handle the 'challege' input into the challenge-response algorithm being changed.  This also needs to be turned off for 'security=server'  which does not support this.  - KEY_EXCH is another 'security' mechanism  whereby the session key actually used by the server is sent by the client  rather than being the shared-secret directly or indirectly.  - As both these methods change the session key  the auth subsystem needed to be changed  to 'override' session keys provided by the backend.  - There has also been a major overhaul of the NTLMSSP subsystem  to merge the 'client' and 'server' functions  so they both operate on a single structure.  This should help the SPNEGO implementation.  - The 'names blob' in NTLMSSP is always in unicode - never in ascii. Don't make an ascii version ever.  - The other big change is to allow variable length session keys.  We have always assumed that session keys are 16 bytes long - and padded to this length if shorter.  However  Kerberos session keys are 8 bytes long  when the krb5 login uses DES.   * This fix allows SMB signging on machines not yet running MIT KRB5 1.3.1. *  - Add better DEBUG() messages to ntlm_auth  warning administrators of misconfigurations that prevent access to the privileged pipe.  This should help reduce some of the 'it just doesn't work' issues.  - Fix data_blob_talloc() to behave the same way data_blob() does when passed a NULL data pointer.  (just allocate)   REMEMBER to make clean after this commit - I have changed plenty of data structures...  Andrew Bartlett 
10105	NO	"Fix our parsing of the LDAP url. We get around it as all decent systems seem to have ldap_initialize.  Thanks to abartlet for the fix (and the bug in the first place ;-))  Volker "
10133	YES	(merge from 3.0)  Refactor our authentication and authentication testing code.  The next move will be to remove our password checking code from the SAM authentication backend  and into a file where other parts of samba can use it.  The ntlm_auth changes provide for better use of common code.  Andrew Bartlett 
10134	YES	(merge from 3.0)  Move our basic password checking code from inside the authentication subsystem into a seperate file - ntlm_check.c.  This allows us to call these routines from ntlm_auth.  The purpose of this exercise is to allow ntlm_auth (when operating as an NTLMSSP server) to avoid talking to winbind.  This should allow for easier debugging.  ntlm_auth itself has been reorgainised  so as to share more code between the SPNEGO-wrapped and 'raw' NTLMSSP modes.  A new 'client' NTLMSSP mode has been added  for use with a Cyrus-SASL module I am writing (based on vl's work)  Andrew Bartlett 
10156	NO	Merge NTLMSSP fixes from 3.0 to HEAD.  Andrew Bartlett 
10174	NO	sync HEAD with recent changes in 3.0 
10223	NO	updated the head branch as well 
10232	NO	"* BUG 101: patch from j.lu@tiesse.com to set the SV_TYPE_PRINTQ_SERVER; * don't set the unix_ERR_XX code in mkdir_internal  let the error mapping   handle it. "
10249	YES	(merge from 3.0)  Remove more unused portions of the 'password cache'.  Andrew Bartlett 
10318	NO	Make us bug-for-bug compatible with W2K3 - to get delete on close semantics on an initial open the desired_access field *must* contain DELETE_ACCESS  simply having it map from a GENERIC_ALL won't do. Fixes delete on close test. Jeremy. 
10424	NO	First part of patch from moriyama@miraclelinux.com (MORIYAMA Masayuki) to fix up netbios names with mb strings. Includes reformat of libsmb/nmblib.c so it's readable. Jeremy. 
10425	YES	Modified fix for bugid #784. Based on a patch from moriyama@miraclelinux.com (MORIYAMA Masayuki). Don't use nstrings to hold workgroup and netbios names. The problem with them is that MB netbios and workgroup names in unix charset (particularly utf8) may be up to 3x bigger than the name when represented in dos charset (ie. cp932). So go back to using fstrings for these but translate into nstrings (ie. 16 byte length values) for transport on the wire. Jeremy. 
10495	YES	Fix get/set of EA's in client library. Added torture test for it. Jeremy. 
10497	NO	Merge nss_winbind stuff from 3_0 to HEAD.  Volker 
